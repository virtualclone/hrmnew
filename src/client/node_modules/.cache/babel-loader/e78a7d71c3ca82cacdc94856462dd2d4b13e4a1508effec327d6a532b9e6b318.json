{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-card-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_compensatory_conflict = _resolveComponent(\"compensatory-conflict\");\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_date_input = _resolveComponent(\"date-input\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.showCompensatoryConflict ? (_openBlock(), _createBlock(_component_compensatory_conflict, {\n    key: 0,\n    \"workshift-exceeded\": $data.isWorkShiftExceeded,\n    data: $data.compConflictData\n  }, null, 8 /* PROPS */, [\"workshift-exceeded\", \"data\"])) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_oxd_text, {\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('Apply Compensatory')), 1 /* TEXT */)]),\n\n    _: 1 /* STABLE */\n  }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n    ref: \"formRef\",\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n      cols: 2,\n      class: \"orangehrm-full-width-grid\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_date_input, {\n          modelValue: $data.compensatory.applyDate,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.compensatory.applyDate = $event),\n          label: _ctx.$t('Work Date'),\n          rules: $data.rules.applyDate,\n          required: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"label\", \"rules\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_oxd_grid, {\n      cols: 2,\n      class: \"orangehrm-full-width-grid\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n          modelValue: $data.compensatory.duration.type,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.compensatory.duration.type = $event),\n          type: \"select\",\n          rules: $data.rules.type,\n          options: $data.durationOptions,\n          label: _ctx.$t('Duration'),\n          required: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"rules\", \"options\", \"label\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_oxd_grid, {\n      cols: 2,\n      class: \"orangehrm-full-width-grid\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n          modelValue: $data.compensatory.comment,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.compensatory.comment = $event),\n          type: \"textarea\",\n          label: _ctx.$t('general.comments'),\n          rules: $data.rules.comment\n        }, null, 8 /* PROPS */, [\"modelValue\", \"label\", \"rules\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_submit_button, {\n        label: _ctx.$t('general.apply')\n      }, null, 8 /* PROPS */, [\"label\"])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"loading\", \"onSubmitValid\"])])]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}