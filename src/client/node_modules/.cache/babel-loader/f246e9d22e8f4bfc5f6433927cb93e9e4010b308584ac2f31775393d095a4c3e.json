{"ast":null,"code":"import { onBeforeMount, reactive, toRefs } from 'vue';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport { OxdSpinner } from '@ohrm/oxd';\nexport default {\n  name: 'JobSpecDownload',\n  components: {\n    'oxd-loading-spinner': OxdSpinner\n  },\n  props: {\n    resourceId: {\n      type: Number,\n      required: true\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/admin/job-titles/${props.resourceId}/specification`);\n    const state = reactive({\n      isLoading: false,\n      file: {\n        id: '',\n        filename: '',\n        fileType: '',\n        fileSize: 0\n      }\n    });\n    const fetchFile = async () => {\n      state.isLoading = true;\n      http.request({\n        method: 'GET',\n        // Prevent triggering response interceptor on 404\n        validateStatus: status => {\n          return status >= 200 && status < 300 || status == 404;\n        }\n      }).then(({\n        data\n      }) => {\n        state.file = {\n          ...data.data\n        };\n      }).finally(() => {\n        state.isLoading = false;\n      });\n    };\n    const downloadFile = () => {\n      if (!state.file.id) return;\n      const downUrl = `${window.appGlobal.baseUrl}/admin/viewJobSpecification/attachId/${state.file.id}`;\n      window.open(downUrl, '_blank');\n    };\n    if (props.resourceId) {\n      onBeforeMount(fetchFile);\n    }\n    return {\n      ...toRefs(state),\n      downloadFile\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}