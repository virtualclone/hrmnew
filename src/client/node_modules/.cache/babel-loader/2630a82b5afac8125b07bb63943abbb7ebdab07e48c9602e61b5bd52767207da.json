{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock, renderSlot as _renderSlot, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5ea41f7f\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-forgot-password-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-forgot-password-wrapper\"\n};\nconst _hoisted_3 = {\n  class: \"orangehrm-card-container\"\n};\nconst _hoisted_4 = {\n  class: \"orangehrm-login-error\"\n};\nconst _hoisted_5 = [\"value\"];\nconst _hoisted_6 = [\"value\"];\nconst _hoisted_7 = {\n  class: \"orangehrm-forgot-password-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_alert = _resolveComponent(\"oxd-alert\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_password_strength_indicator = _resolveComponent(\"password-strength-indicator\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_oxd_form, {\n    ref: \"resetForm\",\n    method: \"post\",\n    action: $options.submitUrl,\n    onSubmitValid: $options.onSubmit\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_text, {\n      tag: \"h6\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('auth.change_weak_password')), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_oxd_divider), _createElementVNode(\"div\", _hoisted_4, [_createVNode(_component_oxd_alert, {\n      show: true,\n      message: $props.invalidCode ? _ctx.$t('auth.invalid_password_reset_code') : $props.error?.message || _ctx.$t('auth.password_not_strong'),\n      type: \"error\"\n    }, null, 8 /* PROPS */, [\"message\"])]), !$props.invalidCode ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createElementVNode(\"input\", {\n      name: \"resetCode\",\n      value: $props.code,\n      type: \"hidden\"\n    }, null, 8 /* PROPS */, _hoisted_5), _createElementVNode(\"input\", {\n      name: \"_token\",\n      value: $props.token,\n      type: \"hidden\"\n    }, null, 8 /* PROPS */, _hoisted_6), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n        value: $props.username,\n        label: _ctx.$t('auth.username'),\n        readonly: \"\",\n        name: \"username\",\n        \"label-icon\": \"person\"\n      }, null, 8 /* PROPS */, [\"value\", \"label\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n        modelValue: $data.user.currentPassword,\n        \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.user.currentPassword = $event),\n        rules: $data.rules.currentPassword,\n        label: _ctx.$t('pim.current_password'),\n        type: \"password\",\n        \"label-icon\": \"key\",\n        autocomplete: \"off\",\n        name: \"currentPassword\"\n      }, null, 8 /* PROPS */, [\"modelValue\", \"rules\", \"label\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_oxd_form_row, {\n      class: \"orangehrm-forgot-password-row\"\n    }, {\n      default: _withCtx(() => [$data.user.newPassword ? (_openBlock(), _createBlock(_component_password_strength_indicator, {\n        key: 0,\n        \"password-strength\": $setup.passwordStrength\n      }, null, 8 /* PROPS */, [\"password-strength\"])) : _createCommentVNode(\"v-if\", true), _createVNode(_component_oxd_input_field, {\n        modelValue: $data.user.newPassword,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.user.newPassword = $event),\n        rules: $data.rules.newPassword,\n        label: _ctx.$t('auth.new_password'),\n        placeholder: _ctx.$t('auth.password'),\n        name: \"password\",\n        type: \"password\",\n        \"label-icon\": \"key\",\n        autocomplete: \"off\"\n      }, null, 8 /* PROPS */, [\"modelValue\", \"rules\", \"label\", \"placeholder\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n        modelValue: $data.user.confirmPassword,\n        \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.user.confirmPassword = $event),\n        rules: $data.rules.confirmPassword,\n        placeholder: _ctx.$t('auth.password'),\n        label: _ctx.$t('general.confirm_password'),\n        type: \"password\",\n        \"label-icon\": \"key\",\n        autocomplete: \"off\",\n        name: \"confirmPassword\"\n      }, null, 8 /* PROPS */, [\"modelValue\", \"rules\", \"placeholder\", \"label\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_oxd_divider), _createElementVNode(\"div\", _hoisted_7, [_createVNode(_component_oxd_button, {\n      label: _ctx.$t('general.save'),\n      size: \"large\",\n      type: \"submit\",\n      \"display-type\": \"secondary\",\n      class: \"orangehrm-forgot-password-button\"\n    }, null, 8 /* PROPS */, [\"label\"])])], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"action\", \"onSubmitValid\"])])]), _renderSlot(_ctx.$slots, \"footer\", {}, undefined, true)]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}