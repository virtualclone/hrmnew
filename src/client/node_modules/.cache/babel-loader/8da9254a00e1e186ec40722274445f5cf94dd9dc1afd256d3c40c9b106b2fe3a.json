{"ast":null,"code":"import { APIService } from '@/core/util/services/api.service';\nimport { freshDate, formatDate } from '@ohrm/core/util/helper/datefns';\nimport BaseWidget from '@/orangehrmDashboardPlugin/components/BaseWidget.vue';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport EmployeesOnLeaveConfigModal from '@/orangehrmDashboardPlugin/components/EmployeesOnLeaveConfigModal.vue';\nimport { OxdIcon } from '@ohrm/oxd';\nexport default {\n  name: 'EmployeesOnLeaveWidget',\n  components: {\n    'oxd-icon': OxdIcon,\n    'base-widget': BaseWidget,\n    'employees-on-leave-config-modal': EmployeesOnLeaveConfigModal\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/dashboard/employees/leaves');\n    const {\n      $tEmpName\n    } = useEmployeeNameTranslate();\n    return {\n      http,\n      tEmpName: $tEmpName\n    };\n  },\n  data() {\n    return {\n      leaveList: [],\n      isLoading: false,\n      leavePeriod: null,\n      showConfigModal: false\n    };\n  },\n  computed: {\n    isEmpty() {\n      return this.leaveList.length === 0;\n    },\n    emptyText() {\n      return this.leavePeriod ? this.$t('dashboard.no_employees_are_on_leave_today') : this.$t('dashboard.leave_period_not_defined');\n    }\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.getAll({\n      date: formatDate(freshDate(), 'yyyy-MM-dd')\n    }).then(response => {\n      const {\n        data,\n        meta\n      } = response.data;\n      this.leaveList = data.map(item => {\n        const {\n          employee,\n          leaveType,\n          duration\n        } = item;\n        let _leaveType = leaveType?.name;\n        if (_leaveType && duration === 'half_day_morning') {\n          _leaveType += ` (${this.$t('leave.half_day_morning')})`;\n        }\n        if (_leaveType && duration === 'half_day_afternoon') {\n          _leaveType += ` (${this.$t('leave.half_day_evening')})`;\n        }\n        if (_leaveType && duration === 'specify_time') {\n          _leaveType += ` (${item.startTime} - ${item.endTime})`;\n        }\n        return {\n          leaveType: _leaveType,\n          empNumber: employee.empNumber,\n          employeeId: employee.employeeId,\n          empName: this.tEmpName(employee, {\n            includeMiddle: false,\n            excludePastEmpTag: false\n          })\n        };\n      });\n      this.leavePeriod = meta?.leavePeriodDefined;\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onClickConfig() {\n      this.showConfigModal = true;\n    },\n    onConfigModalClose() {\n      this.showConfigModal = false;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}