{"ast":null,"code":"import { APIService } from '@ohrm/core/util/services/api.service';\nimport { required, shouldNotExceedCharLength, validEmailFormat, validPhoneNumberFormat } from '@ohrm/core/util/validation/rules';\nimport { OxdSwitchInput } from '@ohrm/oxd';\nexport default {\n  components: {\n    'oxd-switch-input': OxdSwitchInput\n  },\n  props: {\n    numberOfEmployees: {\n      type: Number,\n      required: true\n    },\n    countryList: {\n      type: Array,\n      required: true\n    }\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/admin/organization');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      editable: false,\n      isLoading: false,\n      organization: {\n        name: '',\n        noOfEmployees: this.numberOfEmployees,\n        registrationNumber: '',\n        taxId: '',\n        phone: '',\n        fax: '',\n        email: '',\n        street1: '',\n        street2: '',\n        city: '',\n        province: '',\n        country: null,\n        zipCode: '',\n        note: ''\n      },\n      rules: {\n        name: [required, shouldNotExceedCharLength(100)],\n        registrationNumber: [shouldNotExceedCharLength(30)],\n        taxId: [shouldNotExceedCharLength(30)],\n        phone: [shouldNotExceedCharLength(30), validPhoneNumberFormat],\n        fax: [shouldNotExceedCharLength(30), validPhoneNumberFormat],\n        email: [shouldNotExceedCharLength(30), validEmailFormat],\n        street1: [shouldNotExceedCharLength(100)],\n        street2: [shouldNotExceedCharLength(100)],\n        city: [shouldNotExceedCharLength(30)],\n        province: [shouldNotExceedCharLength(30)],\n        zipCode: [shouldNotExceedCharLength(30)],\n        note: [shouldNotExceedCharLength(255)],\n        country: []\n      },\n      errors: []\n    };\n  },\n  created() {\n    this.isLoading = true;\n    this.http.http.get('/api/v2/admin/organization').then(response => {\n      const {\n        data\n      } = response.data;\n      this.organization.name = data.name;\n      this.organization.registrationNumber = data.registrationNumber;\n      this.organization.taxId = data.taxId;\n      this.organization.phone = data.phone;\n      this.organization.fax = data.fax;\n      this.organization.email = data.email;\n      this.organization.street1 = data.street1;\n      this.organization.street2 = data.street2;\n      this.organization.city = data.city;\n      this.organization.province = data.province;\n      if (data.country !== '' && data.country !== null) {\n        this.organization.country = this.countryList.find(item => {\n          return item.id === data.country;\n        });\n      }\n      this.organization.zipCode = data.zipCode;\n      this.organization.note = data.note;\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.http.put('/api/v2/admin/organization', {\n        name: this.organization.name,\n        registrationNumber: this.organization.registrationNumber,\n        taxId: this.organization.taxId,\n        phone: this.organization.phone,\n        fax: this.organization.fax,\n        email: this.organization.email,\n        street1: this.organization.street1,\n        street2: this.organization.street2,\n        city: this.organization.city,\n        province: this.organization.province,\n        country: this.organization.country?.id,\n        zipCode: this.organization.zipCode,\n        note: this.organization.note\n      }).then(() => {\n        return this.$toast.updateSuccess();\n      }).then(() => {\n        this.isLoading = false;\n        this.editable = false;\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}