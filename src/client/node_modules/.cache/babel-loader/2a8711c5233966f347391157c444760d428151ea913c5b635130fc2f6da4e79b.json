{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport EditEmployeeLayout from '@/orangehrmPimPlugin/components/EditEmployeeLayout';\nimport FullNameInput from '@/orangehrmPimPlugin/components/FullNameInput';\nimport { required, shouldNotExceedCharLength, validDateFormat } from '@ohrm/core/util/validation/rules';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nconst employeeModel = {\n  firstName: '',\n  middleName: '',\n  lastName: '',\n  employeeId: '',\n  otherId: '',\n  drivingLicenseNo: '',\n  drivingLicenseExpiredDate: '',\n  ssnNumber: '',\n  sinNumber: '',\n  nationality: [],\n  maritalStatus: [],\n  birthday: '',\n  gender: '',\n  nickname: '',\n  smoker: '',\n  militaryService: ''\n};\nexport default {\n  components: {\n    'edit-employee-layout': EditEmployeeLayout,\n    'full-name-input': FullNameInput\n  },\n  props: {\n    empNumber: {\n      type: String,\n      required: true\n    },\n    nationalities: {\n      type: Array,\n      default: () => []\n    },\n    showDeprecatedFields: {\n      type: Boolean,\n      default: false\n    },\n    showSsnField: {\n      type: Boolean,\n      default: false\n    },\n    showSinField: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/pim/employees/${props.empNumber}/personal-details`);\n    const {\n      userDateFormat\n    } = useDateFormat();\n    return {\n      http,\n      userDateFormat\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      employee: {\n        ...employeeModel\n      },\n      rules: {\n        firstName: [required, shouldNotExceedCharLength(30)],\n        middleName: [shouldNotExceedCharLength(30)],\n        lastName: [required, shouldNotExceedCharLength(30)],\n        employeeId: [shouldNotExceedCharLength(10)],\n        otherId: [shouldNotExceedCharLength(30)],\n        drivingLicenseNo: [shouldNotExceedCharLength(30)],\n        ssnNumber: [shouldNotExceedCharLength(30)],\n        sinNumber: [shouldNotExceedCharLength(30)],\n        nickname: [shouldNotExceedCharLength(30)],\n        militaryService: [shouldNotExceedCharLength(30)],\n        birthday: [validDateFormat(this.userDateFormat)],\n        drivingLicenseExpiredDate: [validDateFormat(this.userDateFormat)]\n      },\n      maritalStatuses: [{\n        id: 'Single',\n        label: 'Single'\n      }, {\n        id: 'Married',\n        label: 'Married'\n      }, {\n        id: 'Other',\n        label: 'Other'\n      }]\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.getAll().then(response => {\n      this.updateModel(response);\n      return this.http.request({\n        method: 'GET',\n        url: '/api/v2/pim/employees'\n      });\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      this.rules.employeeId.push(v => {\n        const index = data.findIndex(item => item.employeeId?.trim() && String(item.employeeId).toLowerCase() == String(v).toLowerCase());\n        if (index > -1) {\n          const {\n            empNumber\n          } = data[index];\n          return empNumber != this.empNumber ? this.$t('pim.employee_id_exists') : true;\n        } else {\n          return true;\n        }\n      });\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.request({\n        method: 'PUT',\n        data: {\n          lastName: this.employee.lastName,\n          firstName: this.employee.firstName,\n          middleName: this.employee.middleName,\n          employeeId: this.employee.employeeId,\n          otherId: this.employee.otherId,\n          drivingLicenseNo: this.employee.drivingLicenseNo,\n          drivingLicenseExpiredDate: this.employee.drivingLicenseExpiredDate,\n          gender: this.employee.gender,\n          maritalStatus: this.employee.maritalStatus?.id,\n          birthday: this.employee.birthday,\n          nationalityId: this.employee.nationality?.id,\n          ssnNumber: this.showSsnField ? this.employee.ssnNumber : undefined,\n          sinNumber: this.showSinField ? this.employee.sinNumber : undefined,\n          nickname: this.showDeprecatedFields ? this.employee.nickname : undefined,\n          smoker: this.showDeprecatedFields ? this.employee.smoker : undefined,\n          militaryService: this.showDeprecatedFields ? this.employee.militaryService : undefined\n        }\n      }).then(response => {\n        this.updateModel(response);\n        return this.$toast.updateSuccess();\n      }).then(() => {\n        this.isLoading = false;\n      });\n    },\n    updateModel(response) {\n      const {\n        data\n      } = response.data;\n      this.employee = {\n        ...employeeModel,\n        ...data\n      };\n      this.employee.maritalStatus = this.maritalStatuses.find(item => item.id === data.maritalStatus);\n      this.employee.nationality = this.nationalities.find(item => item.id === data.nationality?.id);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}