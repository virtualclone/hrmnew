{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-57dfb53e\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0,\n  class: \"orangehrm-maintenance-note\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-maintenance-note-header\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  return $props.instanceIdentifier !== null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_oxd_text, null, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('general.note')), 1 /* TEXT */)]),\n\n    _: 1 /* STABLE */\n  })]), _createVNode(_component_oxd_text, null, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('maintenance.gdpr_note', {\n      instanceIdentifier: $props.instanceIdentifier\n    })), 1 /* TEXT */)]),\n\n    _: 1 /* STABLE */\n  })])) : _createCommentVNode(\"v-if\", true);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}