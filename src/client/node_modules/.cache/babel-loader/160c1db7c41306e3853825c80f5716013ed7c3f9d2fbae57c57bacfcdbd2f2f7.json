{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computed, ref } from 'vue';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@/core/util/services/api.service';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog.vue';\nimport useSort from '@ohrm/core/util/composable/useSort';\nconst defaultFilters = {\n  jobTitleName: '',\n  jobDescription: ''\n};\nconst defaultSortOrder = {\n  'jt.jobTitleName': 'ASC'\n};\nexport default {\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog\n  },\n  setup() {\n    const filters = ref({\n      ...defaultFilters\n    });\n    const {\n      sortDefinition,\n      sortField,\n      sortOrder,\n      onSort\n    } = useSort({\n      sortDefinition: defaultSortOrder\n    });\n    const serializedFilters = computed(() => {\n      return {\n        jobTitleName: filters.value.jobTitleName,\n        jobDescription: filters.value.jobDescription,\n        sortField: sortField.value,\n        sortOrder: sortOrder.value\n      };\n    });\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/admin/job-titles');\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http, {\n      query: serializedFilters\n    });\n    onSort(execQuery);\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      isLoading,\n      total,\n      pages,\n      pageSize,\n      execQuery,\n      items: response,\n      filters,\n      sortDefinition\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'title',\n        slot: 'title',\n        title: this.$t('admin.job_titles'),\n        sortField: 'jt.jobTitleName',\n        style: {\n          flex: 2\n        }\n      }, {\n        name: 'description',\n        cellType: 'oxd-table-cell-truncate',\n        title: this.$t('admin.job_description'),\n        style: {\n          flex: 4\n        }\n      }, {\n        name: 'actions',\n        title: this.$t('general.actions'),\n        slot: 'action',\n        style: {\n          flex: 1\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: {\n          delete: {\n            onClick: this.onClickDelete,\n            component: 'oxd-icon-button',\n            props: {\n              name: 'trash'\n            }\n          },\n          edit: {\n            onClick: this.onClickEdit,\n            props: {\n              name: 'pencil-fill'\n            }\n          }\n        }\n      }],\n      checkedItems: []\n    };\n  },\n  methods: {\n    onClickAdd() {\n      navigate('/admin/saveJobTitle');\n    },\n    onClickEdit(item) {\n      navigate('/admin/saveJobTitle/{id}', {\n        id: item.id\n      });\n    },\n    onClickDeleteSelected() {\n      const ids = [];\n      this.checkedItems.forEach(index => {\n        ids.push(this.items?.data[index].id);\n      });\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http.deleteAll({\n          ids: items\n        }).then(() => {\n          return this.$toast.deleteSuccess();\n        }).then(() => {\n          this.isLoading = false;\n          this.resetDataTable();\n        });\n      }\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}