{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_employee_autocomplete = _resolveComponent(\"employee-autocomplete\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_jobtitle_dropdown = _resolveComponent(\"jobtitle-dropdown\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_employment_status_dropdown = _resolveComponent(\"employment-status-dropdown\");\n  const _component_date_input = _resolveComponent(\"date-input\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  const _component_oxd_table_filter = _resolveComponent(\"oxd-table-filter\");\n  const _component_reports_table = _resolveComponent(\"reports-table\");\n  return _openBlock(), _createBlock(_component_reports_table, {\n    module: \"time\",\n    name: \"attendance\",\n    prefetch: false,\n    filters: $setup.serializedFilters,\n    \"column-count\": 2\n  }, {\n    default: _withCtx(({\n      generateReport\n    }) => [_createVNode(_component_oxd_table_filter, {\n      \"filter-title\": _ctx.$t('attendance.attendance_total_summary_report')\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_form, {\n        onSubmitValid: generateReport\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n            cols: 3,\n            class: \"orangehrm-full-width-grid\"\n          }, {\n            default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n              default: _withCtx(() => [_createVNode(_component_employee_autocomplete, {\n                modelValue: $setup.filters.employee,\n                \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $setup.filters.employee = $event),\n                rules: $setup.rules.employee,\n                params: {\n                  includeEmployees: 'currentAndPast'\n                }\n              }, null, 8 /* PROPS */, [\"modelValue\", \"rules\"])]),\n              _: 1 /* STABLE */\n            }), _createVNode(_component_oxd_grid_item, null, {\n              default: _withCtx(() => [_createVNode(_component_jobtitle_dropdown, {\n                modelValue: $setup.filters.jobTitle,\n                \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $setup.filters.jobTitle = $event)\n              }, null, 8 /* PROPS */, [\"modelValue\"])]),\n              _: 1 /* STABLE */\n            }), _createVNode(_component_oxd_grid_item, null, {\n              default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n                modelValue: $setup.filters.subunit,\n                \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $setup.filters.subunit = $event),\n                type: \"select\",\n                label: _ctx.$t('general.sub_unit'),\n                options: $props.subunits\n              }, null, 8 /* PROPS */, [\"modelValue\", \"label\", \"options\"])]),\n              _: 1 /* STABLE */\n            }), _createVNode(_component_oxd_grid_item, null, {\n              default: _withCtx(() => [_createVNode(_component_employment_status_dropdown, {\n                modelValue: $setup.filters.empStatus,\n                \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $setup.filters.empStatus = $event)\n              }, null, 8 /* PROPS */, [\"modelValue\"])]),\n              _: 1 /* STABLE */\n            }), _createVNode(_component_oxd_grid_item, null, {\n              default: _withCtx(() => [_createVNode(_component_date_input, {\n                modelValue: $setup.filters.fromDate,\n                \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $setup.filters.fromDate = $event),\n                placeholder: _ctx.$t('general.from'),\n                rules: $setup.rules.fromDate,\n                label: _ctx.$t('general.date_range')\n              }, null, 8 /* PROPS */, [\"modelValue\", \"placeholder\", \"rules\", \"label\"])]),\n              _: 1 /* STABLE */\n            }), _createVNode(_component_oxd_grid_item, null, {\n              default: _withCtx(() => [_createVNode(_component_date_input, {\n                modelValue: $setup.filters.toDate,\n                \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $setup.filters.toDate = $event),\n                label: \"Â \",\n                placeholder: _ctx.$t('general.to'),\n                rules: $setup.rules.toDate\n              }, null, 8 /* PROPS */, [\"modelValue\", \"placeholder\", \"rules\"])]),\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          })]),\n\n          _: 1 /* STABLE */\n        }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_button, {\n            type: \"submit\",\n            \"display-type\": \"secondary\",\n            label: _ctx.$t('general.view')\n          }, null, 8 /* PROPS */, [\"label\"])]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onSubmitValid\"])]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"filter-title\"]), _hoisted_1]),\n    footer: _withCtx(({\n      data\n    }) => [_createTextVNode(_toDisplayString(_ctx.$t('time.total_duration')) + \": \" + _toDisplayString(data.meta ? data.meta.sum.label : '0.00'), 1 /* TEXT */)]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"filters\"]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}