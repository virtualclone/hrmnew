{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_icon_button = _resolveComponent(\"oxd-icon-button\");\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_oxd_multiselect_chips = _resolveComponent(\"oxd-multiselect-chips\");\n  const _component_oxd_switch_input = _resolveComponent(\"oxd-switch-input\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_oxd_grid_item, {\n    class: \"orangehrm-report-field --offset-column-1\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_icon_button, {\n      name: \"trash-fill\",\n      onClick: $setup.onClickDelete\n    }, null, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_oxd_text, {\n      class: \"orangehrm-report-field-name\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($props.fieldGroup.label), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }), _createVNode(_component_oxd_grid_item, null, {\n    default: _withCtx(() => [_createVNode(_component_oxd_multiselect_chips, {\n      selected: $props.selectedFields,\n      onChipRemoved: $setup.onRemoveSelected\n    }, null, 8 /* PROPS */, [\"selected\", \"onChipRemoved\"])]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_oxd_grid_item, {\n    class: \"orangehrm-report-field\"\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_text, {\n      class: \"orangehrm-report-field-header\",\n      tag: \"p\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('general.include_header')), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_oxd_switch_input, {\n      \"model-value\": $props.includeHeader,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.$emit('update:includeHeader', $event))\n    }, null, 8 /* PROPS */, [\"model-value\"])]),\n    _: 1 /* STABLE */\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}