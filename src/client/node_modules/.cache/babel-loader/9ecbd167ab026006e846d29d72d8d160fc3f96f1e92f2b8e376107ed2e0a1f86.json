{"ast":null,"code":"import { toRefs, reactive, computed, watchPostEffect } from 'vue';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport LeaveBalanceModal from '@/orangehrmLeavePlugin/components/LeaveBalanceModal';\nimport LeaveBalanceInsufficientModal from '@/orangehrmLeavePlugin/components/LeaveBalanceInsufficientModal';\nimport useLeaveValidators from '@/orangehrmLeavePlugin/util/composable/useLeaveValidators';\nimport { OxdLabel } from '@ohrm/oxd';\nexport default {\n  name: 'LeaveBalance',\n  components: {\n    'oxd-label': OxdLabel,\n    'leave-balance-modal': LeaveBalanceModal,\n    'leave-balance-insufficient-modal': LeaveBalanceInsufficientModal\n  },\n  inheritAttrs: false,\n  props: {\n    leaveData: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  setup(props) {\n    const state = reactive({\n      data: null,\n      meta: null,\n      balance: 0,\n      showModal: false\n    });\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/leave/leave-balance/leave-type');\n    http.setIgnorePath('/api/v2/leave/leave-balance/leave-type');\n    const {\n      validateLeaveBalance\n    } = useLeaveValidators(http);\n    const leaveBalance = computed(() => {\n      return props.leaveData.type?.id ? `${state.balance.toFixed(2)} Day(s)` : '0.00 Day(s)';\n    });\n    const onModalOpen = () => {\n      state.showModal = true;\n    };\n    const onModalClose = () => {\n      state.showModal = false;\n    };\n    const leaveBalanceModal = computed(() => {\n      return Array.isArray(state.data) ? 'leave-balance-insufficient-modal' : 'leave-balance-modal';\n    });\n    watchPostEffect(async () => {\n      if (props.leaveData.type?.id) {\n        validateLeaveBalance(props.leaveData).then(({\n          balance,\n          breakdown,\n          metaData\n        }) => {\n          state.balance = balance;\n          if (breakdown) state.data = breakdown;\n          if (metaData) state.meta = metaData;\n        }).catch(() => {\n          state.data = null;\n          state.meta = null;\n          state.balance = 0;\n        });\n      }\n    });\n    return {\n      ...toRefs(state),\n      leaveBalance,\n      onModalOpen,\n      onModalClose,\n      leaveBalanceModal\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}