{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_input_group = _resolveComponent(\"oxd-input-group\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_date_input = _resolveComponent(\"date-input\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_timezone_dropdown = _resolveComponent(\"timezone-dropdown\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  return _openBlock(), _createBlock(_component_oxd_form, {\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 4,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [$data.attendanceRecord.previousRecord ? (_openBlock(), _createElementBlock(_Fragment, {\n          key: 0\n        }, [_createVNode(_component_oxd_grid_item, {\n          class: _normalizeClass(!$data.attendanceRecord.previousRecord.note ? '--span-column-2' : '')\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_group, {\n            label: _ctx.$t('attendance.punched_in_time')\n          }, {\n            default: _withCtx(() => [_createVNode(_component_oxd_text, {\n              type: \"subtitle-2\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString($options.previousAttendanceRecordDate) + \" - \" + _toDisplayString($options.previousAttendanceRecordTime) + \" \", 1 /* TEXT */), _createVNode(_component_oxd_text, {\n                tag: \"span\",\n                class: \"orangehrm-attendance-punchedIn-timezone\"\n              }, {\n                default: _withCtx(() => [_createTextVNode(_toDisplayString(`(GMT ${$data.previousRecordTimezone})`), 1 /* TEXT */)]),\n\n                _: 1 /* STABLE */\n              })]),\n\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"label\"])]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"class\"]), $data.attendanceRecord.previousRecord.note ? (_openBlock(), _createBlock(_component_oxd_grid_item, {\n          key: 0\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_group, {\n            label: _ctx.$t('attendance.punched_in_note')\n          }, {\n            default: _withCtx(() => [_createVNode(_component_oxd_text, {\n              type: \"subtitle-2\"\n            }, {\n              default: _withCtx(() => [_createTextVNode(_toDisplayString($data.attendanceRecord.previousRecord.note), 1 /* TEXT */)]),\n\n              _: 1 /* STABLE */\n            })]),\n\n            _: 1 /* STABLE */\n          }, 8 /* PROPS */, [\"label\"])]),\n          _: 1 /* STABLE */\n        })) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Date Selector \"), _createVNode(_component_oxd_grid_item, {\n          class: \"--offset-row-2\"\n        }, {\n          default: _withCtx(() => [(_openBlock(), _createBlock(_component_date_input, {\n            key: $data.attendanceRecord.time,\n            modelValue: $data.attendanceRecord.date,\n            \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.attendanceRecord.date = $event),\n            label: _ctx.$t('general.date'),\n            rules: $data.rules.date,\n            disabled: !$props.isEditable,\n            required: \"\"\n          }, null, 8 /* PROPS */, [\"modelValue\", \"label\", \"rules\", \"disabled\"]))]),\n          _: 1 /* STABLE */\n        }), _createCommentVNode(\" Time  Selector \"), _createVNode(_component_oxd_grid_item, {\n          class: \"--offset-row-2\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.attendanceRecord.time,\n            \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.attendanceRecord.time = $event),\n            label: _ctx.$t('general.time'),\n            disabled: !$props.isEditable,\n            rules: $data.rules.time,\n            type: \"time\",\n            placeholder: _ctx.$t('attendance.hh_mm'),\n            required: \"\"\n          }, null, 8 /* PROPS */, [\"modelValue\", \"label\", \"disabled\", \"rules\", \"placeholder\"])]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _createCommentVNode(\" select timezone \"), $props.isTimezoneEditable ? (_openBlock(), _createBlock(_component_oxd_grid, {\n      key: 0,\n      cols: 2\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n        default: _withCtx(() => [_createVNode(_component_timezone_dropdown, {\n          modelValue: $data.attendanceRecord.timezone,\n          \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.attendanceRecord.timezone = $event),\n          required: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    })) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Note input \"), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 4,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, {\n          class: \"--span-column-2\"\n        }, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.attendanceRecord.note,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.attendanceRecord.note = $event),\n            rules: $data.rules.note,\n            label: _ctx.$t('general.note'),\n            placeholder: _ctx.$t('general.type_here'),\n            type: \"textarea\"\n          }, null, 8 /* PROPS */, [\"modelValue\", \"rules\", \"label\", \"placeholder\"])]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_submit_button, {\n        label: !$props.attendanceRecordId ? _ctx.$t('attendance.in') : _ctx.$t('attendance.out')\n      }, null, 8 /* PROPS */, [\"label\"])]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"loading\", \"onSubmitValid\"]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}