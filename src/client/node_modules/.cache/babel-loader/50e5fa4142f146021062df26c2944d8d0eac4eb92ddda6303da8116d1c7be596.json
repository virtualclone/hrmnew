{"ast":null,"code":"import { ref } from 'vue';\nimport { required, validDateFormat, endDateShouldBeAfterStartDate, startDateShouldBeBeforeEndDate } from '@ohrm/core/util/validation/rules';\nimport usei18n from '@/core/util/composable/usei18n';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nexport default {\n  name: 'ReportCriterionDateRange',\n  inheritAttrs: false,\n  props: {\n    operator: {\n      type: Object,\n      required: false,\n      default: () => null\n    },\n    valueX: {\n      type: String,\n      required: false,\n      default: null\n    },\n    valueY: {\n      type: String,\n      required: false,\n      default: null\n    }\n  },\n  emits: ['update:valueX', 'update:valueY', 'update:operator'],\n  setup(props) {\n    const {\n      $t\n    } = usei18n();\n    const {\n      jsDateFormat,\n      userDateFormat\n    } = useDateFormat();\n    const operators = ref([{\n      id: 'lt',\n      label: 'Joined before'\n    }, {\n      id: 'gt',\n      label: 'Joined after'\n    }, {\n      id: 'between',\n      label: 'Joined in between'\n    }]);\n    const rules = {\n      operator: [required],\n      valueXOnly: [required, validDateFormat(userDateFormat)],\n      valueX: [required, validDateFormat(userDateFormat), startDateShouldBeBeforeEndDate(() => props.valueY, $t('general.from_date_should_be_before_to_date'))],\n      valueY: [required, validDateFormat(userDateFormat), endDateShouldBeAfterStartDate(() => props.valueX, $t('general.to_date_should_be_after_from_date'))]\n    };\n    return {\n      rules,\n      operators,\n      jsDateFormat,\n      userDateFormat\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}