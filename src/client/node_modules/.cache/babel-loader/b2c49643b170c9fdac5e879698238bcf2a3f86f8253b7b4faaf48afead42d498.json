{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_time_input = _resolveComponent(\"time-input\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_oxd_grid_item, null, {\n    default: _withCtx(() => [_createVNode(_component_time_input, {\n      label: _ctx.$t('general.from'),\n      \"model-value\": $props.fromTime,\n      rules: $props.rules.fromTime,\n      required: \"\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.$emit('update:fromTime', $event))\n    }, null, 8 /* PROPS */, [\"label\", \"model-value\", \"rules\"])]),\n    _: 1 /* STABLE */\n  }), _createVNode(_component_oxd_grid_item, null, {\n    default: _withCtx(() => [_createVNode(_component_time_input, {\n      label: _ctx.$t('general.to'),\n      \"model-value\": $props.toTime,\n      rules: $props.rules.toTime,\n      required: \"\",\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.$emit('update:toTime', $event))\n    }, null, 8 /* PROPS */, [\"label\", \"model-value\", \"rules\"])]),\n    _: 1 /* STABLE */\n  })], 64 /* STABLE_FRAGMENT */);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}