{"ast":null,"code":"import { APIService } from '@/core/util/services/api.service';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nconst candidateModel = {\n  candidateName: '',\n  vacancyName: '',\n  hiringManagerName: '',\n  status: null\n};\nexport default {\n  name: 'CandidateActionLayout',\n  inheritAttrs: false,\n  props: {\n    candidateId: {\n      type: Number,\n      required: true\n    },\n    title: {\n      type: String,\n      required: true\n    },\n    loading: {\n      type: Boolean,\n      required: true\n    }\n  },\n  emits: ['update:loading'],\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/recruitment/candidates`);\n    const {\n      $tEmpName\n    } = useEmployeeNameTranslate();\n    return {\n      http,\n      translateEmpName: $tEmpName\n    };\n  },\n  data() {\n    return {\n      candidate: {\n        ...candidateModel\n      },\n      statuses: [{\n        id: 1,\n        label: this.$t('recruitment.application_initiated')\n      }, {\n        id: 2,\n        label: this.$t('recruitment.shortlisted')\n      }, {\n        id: 3,\n        label: this.$t('leave.rejected')\n      }, {\n        id: 4,\n        label: this.$t('recruitment.interview_scheduled')\n      }, {\n        id: 5,\n        label: this.$t('recruitment.interview_passed')\n      }, {\n        id: 6,\n        label: this.$t('recruitment.interview_failed')\n      }, {\n        id: 7,\n        label: this.$t('recruitment.job_offered')\n      }, {\n        id: 8,\n        label: this.$t('recruitment.offer_declined')\n      }, {\n        id: 9,\n        label: this.$t('recruitment.hired')\n      }]\n    };\n  },\n  computed: {\n    recruitmentStatus() {\n      return this.statuses.find(item => item.id === this.candidate.status?.id)?.label || null;\n    }\n  },\n  beforeMount() {\n    this.$emit('update:loading', true);\n    this.http.get(this.candidateId).then(response => {\n      const {\n        data\n      } = response.data;\n      this.candidate.status = data.status;\n      this.candidate.candidateName = `${data?.firstName} ${data?.middleName || ''} ${data?.lastName}`;\n      if (data?.vacancy) {\n        this.candidate.vacancyName = data?.vacancy.name;\n      }\n      if (data?.vacancy?.hiringManager) {\n        this.candidate.hiringManagerName = this.translateEmpName(data.vacancy.hiringManager, {\n          includeMiddle: true,\n          excludePastEmpTag: false\n        });\n      }\n    }).finally(() => {\n      this.$emit('update:loading', false);\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}