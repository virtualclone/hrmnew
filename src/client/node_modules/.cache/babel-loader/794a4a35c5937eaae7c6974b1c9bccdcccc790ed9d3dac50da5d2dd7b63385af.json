{"ast":null,"code":"import { ref, watchEffect } from 'vue';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nexport default {\n  name: 'LeaveTypeDropdown',\n  props: {\n    eligibleOnly: {\n      type: Boolean,\n      default: true\n    },\n    employeeId: {\n      type: Number,\n      required: false,\n      default: null\n    },\n    showEmptySelector: {\n      type: Boolean,\n      default: true\n    },\n    includeAllocated: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup(props, context) {\n    const options = ref([]);\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/leave/leave-types${props.eligibleOnly ? '/eligible' : ''}`);\n    watchEffect(async () => {\n      if (!props.eligibleOnly && props.includeAllocated) {\n        // eslint-disable-next-line no-console\n        console.error('`includeAllocated` prop can true only if `eligibleOnly` prop true');\n      }\n      http.getAll({\n        empNumber: props.employeeId,\n        includeAllocated: props.eligibleOnly && props.includeAllocated ? true : undefined,\n        ...(props.eligibleOnly === false && {\n          limit: 0\n        })\n      }).then(({\n        data\n      }) => {\n        options.value = data.data.map(item => {\n          return {\n            id: item.id,\n            label: item.name,\n            isDeleted: item.deleted\n          };\n        });\n        if (!props.showEmptySelector && options.value.length > 0) {\n          // this $event is only fired to default select first option\n          // where --select-- options is not shown\n          // eslint-disable-next-line vue/require-explicit-emits\n          context.emit('update:modelValue', options.value[0]);\n        }\n      });\n    });\n    return {\n      options\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}