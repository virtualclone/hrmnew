{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, resolveDynamicComponent as _resolveDynamicComponent, Fragment as _Fragment, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-25d16a86\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"orangehrm-leave-balance\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_label = _resolveComponent(\"oxd-label\");\n  const _component_oxd_icon_button = _resolveComponent(\"oxd-icon-button\");\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_input_group = _resolveComponent(\"oxd-input-group\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_oxd_input_group, null, {\n    label: _withCtx(() => [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_oxd_label, {\n      label: _ctx.$t('leave.leave_balance')\n    }, null, 8 /* PROPS */, [\"label\"]), $props.leaveData.type ? (_openBlock(), _createBlock(_component_oxd_icon_button, {\n      key: 0,\n      class: \"--help\",\n      name: \"question-circle\",\n      \"with-container\": false,\n      onClick: $setup.onModalOpen\n    }, null, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true)])]),\n    default: _withCtx(() => [_ctx.balance >= 0 ? (_openBlock(), _createBlock(_component_oxd_text, {\n      key: 0,\n      class: \"orangehrm-leave-balance-text\",\n      tag: \"p\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.leaveBalance), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    })) : (_openBlock(), _createBlock(_component_oxd_text, {\n      key: 1,\n      class: \"orangehrm-leave-balance-text --error\",\n      tag: \"p\"\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('leave.balance_not_sufficient')), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }))]),\n\n    _: 1 /* STABLE */\n  }), _ctx.showModal ? (_openBlock(), _createBlock(_resolveDynamicComponent($setup.leaveBalanceModal), {\n    key: 0,\n    data: _ctx.data,\n    meta: _ctx.meta,\n    onClose: $setup.onModalClose\n  }, null, 40 /* PROPS, HYDRATE_EVENTS */, [\"data\", \"meta\", \"onClose\"])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}