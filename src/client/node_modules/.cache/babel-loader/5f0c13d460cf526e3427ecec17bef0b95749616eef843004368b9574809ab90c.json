{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, createElementVNode as _createElementVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_icon_button = _resolveComponent(\"oxd-icon-button\");\n  const _component_oxd_loading_spinner = _resolveComponent(\"oxd-loading-spinner\");\n  const _component_oxd_input_group = _resolveComponent(\"oxd-input-group\");\n  return _openBlock(), _createBlock(_component_oxd_input_group, {\n    label: _ctx.$t('general.job_specification')\n  }, {\n    default: _withCtx(() => [_createElementVNode(\"div\", {\n      class: _normalizeClass({\n        'input-container': true,\n        '--disabled': !_ctx.file.id\n      })\n    }, [_createVNode(_component_oxd_text, {\n      class: \"input-container-filename\",\n      tag: \"p\",\n      title: _ctx.file.filename,\n      onClick: $setup.downloadFile\n    }, {\n      default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.file.id ? _ctx.file.filename : 'Not Defined'), 1 /* TEXT */)]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"title\", \"onClick\"]), !_ctx.isLoading && _ctx.file.id ? (_openBlock(), _createBlock(_component_oxd_icon_button, {\n      key: 0,\n      class: \"input-container-icon\",\n      name: \"download\",\n      onClick: $setup.downloadFile\n    }, null, 8 /* PROPS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), _ctx.isLoading ? (_openBlock(), _createBlock(_component_oxd_loading_spinner, {\n      key: 1,\n      class: \"input-container-loader\",\n      \"with-container\": false\n    })) : _createCommentVNode(\"v-if\", true)], 2 /* CLASS */)]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"label\"]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}