{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { APIService } from '@/core/util/services/api.service';\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport ProfileImageInput from '@/orangehrmPimPlugin/components/ProfileImageInput';\nimport FullNameInput from '@/orangehrmPimPlugin/components/FullNameInput';\nimport PasswordInput from '@/core/components/inputs/PasswordInput';\nimport { maxFileSize, required, shouldNotExceedCharLength, shouldNotLessThanCharLength, validFileTypes } from '@ohrm/core/util/validation/rules';\nimport { OxdSwitchInput } from '@ohrm/oxd';\nconst defaultPic = `${window.appGlobal.publicPath}/images/default-photo.png`;\nconst employeeModel = {\n  firstName: '',\n  middleName: '',\n  lastName: '',\n  empPicture: null,\n  employeeId: ''\n};\nconst userModel = {\n  username: '',\n  userRoleId: 2,\n  empNumber: 0,\n  status: '1',\n  password: '',\n  passwordConfirm: ''\n};\nexport default {\n  components: {\n    'oxd-switch-input': OxdSwitchInput,\n    'profile-image-input': ProfileImageInput,\n    'full-name-input': FullNameInput,\n    'password-input': PasswordInput\n  },\n  props: {\n    empId: {\n      type: String,\n      required: true\n    },\n    allowedImageTypes: {\n      type: Array,\n      required: true\n    }\n  },\n  setup(props) {\n    const employee = ref({\n      ...employeeModel,\n      employeeId: props.empId ? props.empId : ''\n    });\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/pim/employees');\n    return {\n      http,\n      employee\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      createLogin: false,\n      user: {\n        ...userModel\n      },\n      empNumber: null,\n      rules: {\n        firstName: [required, shouldNotExceedCharLength(30)],\n        middleName: [shouldNotExceedCharLength(30)],\n        lastName: [required, shouldNotExceedCharLength(30)],\n        employeeId: [shouldNotExceedCharLength(10)],\n        empPicture: [maxFileSize(1024 * 1024), validFileTypes(this.allowedImageTypes)],\n        username: [required, shouldNotLessThanCharLength(5), shouldNotExceedCharLength(40)],\n        status: [required]\n      }\n    };\n  },\n  computed: {\n    profilePicUrl() {\n      if (this.employee.empPicture) {\n        const file = this.employee.empPicture.base64;\n        const type = this.employee.empPicture.type;\n        const isPicture = this.allowedImageTypes.findIndex(item => item === type);\n        return isPicture > -1 ? `data:${type};base64,${file}` : defaultPic;\n      } else {\n        return defaultPic;\n      }\n    }\n  },\n  created() {\n    this.isLoading = true;\n    this.http.getAll().then(response => {\n      const {\n        data\n      } = response.data;\n      this.rules.employeeId.push(v => {\n        const index = data.findIndex(item => item.employeeId?.trim() && String(item.employeeId).toLowerCase() == String(v).toLowerCase());\n        if (index > -1) {\n          return this.$t('pim.employee_id_exists');\n        } else {\n          return true;\n        }\n      });\n      return this.http.request({\n        method: 'GET',\n        url: '/api/v2/admin/users'\n      });\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      this.rules.username.push(v => {\n        const index = data.findIndex(item => String(item.userName).toLowerCase() == String(v).toLowerCase());\n        if (index > -1) {\n          return this.$t('pim.username_already_exists');\n        } else {\n          return true;\n        }\n      });\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onCancel() {\n      navigate('/pim/viewEmployeeList');\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http.create({\n        ...this.employee\n      }).then(response => {\n        const {\n          data\n        } = response;\n        if (data?.data) {\n          this.empNumber = data.data.empNumber;\n        }\n        if (this.createLogin && data?.data) {\n          return this.http.request({\n            method: 'POST',\n            url: '/api/v2/admin/users',\n            data: {\n              username: this.user.username,\n              password: this.user.password,\n              status: this.user.status == '1',\n              userRoleId: this.user.userRoleId,\n              empNumber: data.data.empNumber\n            }\n          });\n        } else {\n          return;\n        }\n      }).then(() => {\n        return this.$toast.saveSuccess();\n      }).then(() => {\n        this.employee = {\n          ...employeeModel\n        };\n        this.user = {\n          ...userModel\n        };\n        if (this.empNumber) {\n          navigate(`/pim/viewPersonalDetails/empNumber/${this.empNumber}`);\n        } else {\n          this.onCancel();\n        }\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}