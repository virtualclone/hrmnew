{"ast":null,"code":"import { required, validSelection } from '@ohrm/core/util/validation/rules';\nimport ReportToEmployeeAutocomplete from '@/orangehrmPimPlugin/components/ReportToEmployeeAutocomplete';\nconst reportToModel = {\n  employee: null,\n  reportingMethod: null\n};\nexport default {\n  name: 'EditEmployeeReportTo',\n  components: {\n    'report-to-employee-autocomplete': ReportToEmployeeAutocomplete\n  },\n  props: {\n    http: {\n      type: Object,\n      required: true\n    },\n    data: {\n      type: Object,\n      required: true\n    },\n    reportingMethods: {\n      type: Array,\n      required: true\n    },\n    type: {\n      type: String,\n      required: true\n    },\n    empNumber: {\n      type: String,\n      required: true\n    },\n    api: {\n      type: String,\n      required: true\n    }\n  },\n  emits: ['close'],\n  setup(props) {\n    const allowedEmployeesApi = `/api/v2/pim/employees/${props.empNumber}/report-to/allowed`;\n    return {\n      allowedEmployeesApi\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      reportTo: {\n        ...reportToModel\n      },\n      rules: {\n        employee: [required, validSelection],\n        reportingMethod: [required]\n      }\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.request({\n      method: 'GET',\n      url: this.type === 'Supervisor' ? `${this.api}${this.data.supervisorEmpNumber}` : `${this.api}${this.data.subordinateEmpNumber}`\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      this.reportTo.employee = {\n        id: this.type === 'Supervisor' ? data.supervisor.empNumber : data.subordinate.empNumber,\n        label: this.type === 'Supervisor' ? `${data.supervisor.firstName} ${data.supervisor.middleName} ${data.supervisor.lastName}` : `${data.subordinate.firstName} ${data.subordinate.middleName} ${data.subordinate.lastName}`,\n        isPastEmployee: this.type === 'Supervisor' ? data.supervisor.terminationId : data.subordinate.terminationId\n      };\n      this.reportTo.reportingMethod = this.reportingMethods.find(item => item.id === data.reportingMethod.id);\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      const id = this.type === 'Supervisor' ? this.data.supervisorEmpNumber : this.data.subordinateEmpNumber;\n      this.http.update(id, {\n        reportingMethodId: this.reportTo.reportingMethod?.id\n      }).then(() => {\n        return this.$toast.updateSuccess();\n      }).then(() => {\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}