{"ast":null,"code":"import { maxFileSize, shouldNotExceedCharLength, validFileTypes } from '@ohrm/core/util/validation/rules';\nconst attachmentModel = {\n  attachment: null,\n  comment: ''\n};\nexport default {\n  name: 'EditInterviewAttachment',\n  props: {\n    http: {\n      type: Object,\n      required: true\n    },\n    data: {\n      type: Object,\n      required: true\n    },\n    maxFileSize: {\n      type: Number,\n      required: true\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true\n    }\n  },\n  emits: ['close'],\n  data() {\n    return {\n      isLoading: false,\n      currentFile: '',\n      attachment: {\n        ...attachmentModel\n      },\n      rules: {\n        comment: [shouldNotExceedCharLength(200)],\n        attachment: [maxFileSize(this.maxFileSize), validFileTypes(this.allowedFileTypes)]\n      }\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.get(this.data.id).then(response => {\n      const {\n        data\n      } = response.data;\n      this.currentFile = data.attachment.fileName;\n      this.attachment.comment = data.comment;\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.update(this.data.id, {\n        comment: this.attachment.comment,\n        currentAttachment: this.attachment.attachment !== null ? 'replaceCurrent' : 'keepCurrent',\n        attachment: this.attachment.attachment !== null ? this.attachment.attachment : undefined\n      }).then(() => {\n        return this.$toast.updateSuccess();\n      }).then(() => {\n        this.attachment = {\n          ...attachmentModel\n        };\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}