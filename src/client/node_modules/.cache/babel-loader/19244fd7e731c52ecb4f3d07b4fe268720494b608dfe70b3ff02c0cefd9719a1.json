{"ast":null,"code":"import { computed, onBeforeUnmount, reactive, toRefs } from 'vue';\nexport default {\n  name: 'PhotoViewer',\n  props: {\n    post: {\n      type: Object,\n      required: true\n    },\n    photoIndex: {\n      type: Number,\n      required: true\n    }\n  },\n  emits: ['close'],\n  setup(props, context) {\n    const state = reactive({\n      index: props.photoIndex\n    });\n    const onClickNextPhoto = () => state.index++;\n    const onClickPreviousPhoto = () => state.index--;\n    const selectedPhoto = computed(() => {\n      const photo = props.post.photoIds[state.index];\n      return `${window.appGlobal.baseUrl}/buzz/photo/${photo}`;\n    });\n    const onClickClose = $event => {\n      if ($event.key && $event.key !== 'Escape') return;\n      context.emit('close');\n    };\n    window.addEventListener('keydown', onClickClose);\n    onBeforeUnmount(() => window.removeEventListener('keydown', onClickClose));\n    return {\n      onClickClose,\n      selectedPhoto,\n      onClickNextPhoto,\n      onClickPreviousPhoto,\n      ...toRefs(state)\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}