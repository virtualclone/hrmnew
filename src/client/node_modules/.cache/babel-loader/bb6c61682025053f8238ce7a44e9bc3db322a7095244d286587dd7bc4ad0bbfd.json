{"ast":null,"code":"import { APIService } from '@/core/util/services/api.service';\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport ClaimAttachment from '@/orangehrmClaimPlugin/components/ClaimAttachment.vue';\nimport ClaimExpenses from '@/orangehrmClaimPlugin/components/ClaimExpenses.vue';\nimport ClaimActionButtons from '@/orangehrmClaimPlugin/components/ClaimActionButtons.vue';\nexport default {\n  name: 'SubmitClaim',\n  components: {\n    'claim-attachment': ClaimAttachment,\n    'claim-expenses': ClaimExpenses,\n    'claim-action-buttons': ClaimActionButtons\n  },\n  props: {\n    id: {\n      type: Number,\n      required: true\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true\n    },\n    maxFileSize: {\n      type: Number,\n      required: true\n    }\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/claim/requests');\n    return {\n      http\n    };\n  },\n  data() {\n    const statusMap = {\n      SUBMITTED: this.$t('time.submitted'),\n      APPROVED: this.$t('time.approved'),\n      REJECTED: this.$t('leave.rejected'),\n      CANCELLED: this.$t('leave.cancelled'),\n      PAID: this.$t('claim.paid'),\n      INITIATED: this.$t('claim.initiated')\n    };\n    return {\n      isLoading: false,\n      request: {},\n      claimEvent: {},\n      currency: {},\n      response: {},\n      allowedActions: [],\n      statusMap\n    };\n  },\n  computed: {\n    canEdit() {\n      if (this.allowedActions) {\n        return this.allowedActions.includes('Submit');\n      }\n      return false;\n    },\n    formattedEventName() {\n      return this.claimEvent.isDeleted ? `${this.claimEvent.name} (${this.$t('general.deleted')})` : !this.claimEvent.status ? `${this.claimEvent.name} (${this.$t('performance.inactive')})` : this.claimEvent.name;\n    }\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.get(this.id).then(res => {\n      const {\n        data,\n        meta\n      } = res.data;\n      this.response = res.data;\n      this.request = data;\n      this.claimEvent = data.claimEvent;\n      this.currency = data.currencyType;\n      this.allowedActions = meta.allowedActions.map(action => action.name);\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onCancel() {\n      navigate('/claim/submitClaim');\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}