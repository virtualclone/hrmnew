{"ast":null,"code":"import { APIService } from '@ohrm/core/util/services/api.service';\nimport { required } from '@/core/util/validation/rules';\nimport { navigate } from '@/core/util/helper/navigation';\nimport useLocale from '@/core/util/composable/useLocale';\nconst timeSheetPeriodModel = {\n  startDay: null\n};\nexport default {\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/time/time-sheet-period');\n    const {\n      locale\n    } = useLocale();\n    return {\n      http,\n      locale\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      timeSheetPeriod: {\n        ...timeSheetPeriodModel\n      },\n      rules: {\n        startDay: [required]\n      }\n    };\n  },\n  computed: {\n    days() {\n      return Array(7).fill('').map((...[, index]) => {\n        return {\n          id: index === 0 ? 7 : index,\n          label: this.locale.localize.day(index, {\n            width: 'wide'\n          })\n        };\n      });\n    }\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.request({\n      method: 'GET'\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      this.updateTimeSheetPeriodModel(parseInt(data.startDay));\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.request({\n        method: 'PUT',\n        data: {\n          startDay: this.timeSheetPeriod.startDay?.id\n        }\n      }).then(() => {\n        return this.$toast.saveSuccess();\n      }).then(() => {\n        navigate('/time/viewEmployeeTimesheet');\n      });\n    },\n    updateTimeSheetPeriodModel(day) {\n      this.timeSheetPeriod.startDay = this.days.find(d => {\n        return d.id === day;\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}