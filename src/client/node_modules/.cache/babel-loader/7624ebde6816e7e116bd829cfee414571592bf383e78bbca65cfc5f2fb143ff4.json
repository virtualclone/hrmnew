{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { APIService } from '@/core/util/services/api.service';\nimport { required, shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nimport { OxdDialog } from '@ohrm/oxd';\nimport SupervisorDropdown from '@/orangehrmAdminPlugin/components/SupervisorDropdown';\nconst orgUnitModel = {\n  unitId: '',\n  name: '',\n  description: '',\n  empNumber: null\n};\nexport default {\n  name: 'EditOrgUnit',\n  components: {\n    'oxd-dialog': OxdDialog,\n    'supervisor-dropdown': SupervisorDropdown\n  },\n  props: {\n    data: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: ['close'],\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/admin/subunits');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      orgUnit: {\n        ...orgUnitModel\n      },\n      rules: {\n        unitId: [shouldNotExceedCharLength(100)],\n        name: [required, shouldNotExceedCharLength(100)],\n        description: [shouldNotExceedCharLength(400)]\n      },\n      id: null\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.get(this.data.id).then(response => {\n      const {\n        data\n      } = response.data;\n      this.orgUnit.name = data.name;\n      this.orgUnit.description = data.description;\n      this.orgUnit.unitId = data.unitId;\n      this.orgUnit.empNumber = data.empNumber;\n      this.id = data.id;\n      this.orgUnit.empNumber = {\n        id: data.empNumber,\n        label: `${data.employee.firstName} ${data.employee.middleName} ${data.employee.lastName}`\n      };\n      // Fetch list data for unique test\n      return this.http.getAll();\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      if (data) {\n        this.rules.name.push(v => {\n          const index = data.findIndex(item => String(item.name).toLowerCase() == String(v).toLowerCase());\n          if (index > -1) {\n            const {\n              id\n            } = data[index];\n            return id != this.data.id ? this.$t('admin.organization_unit_name_should_be_unique') : true;\n          } else {\n            return true;\n          }\n        });\n      }\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.update(this.data.id, {\n        ...this.orgUnit,\n        empNumber: this.orgUnit.empNumber?.id\n      }).then(() => {\n        return this.$toast.updateSuccess();\n      }).then(() => {\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}