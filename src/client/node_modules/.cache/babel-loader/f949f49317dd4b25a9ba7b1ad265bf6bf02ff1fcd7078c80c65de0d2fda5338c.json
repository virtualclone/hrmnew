{"ast":null,"code":"import { required, maxFileSize, validFileTypes, validDateFormat, validEmailFormat, validPhoneNumberFormat, shouldNotExceedCharLength, shouldBeCurrentOrPreviousDate } from '@/core/util/validation/rules';\nimport { navigate } from '@/core/util/helper/navigation';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport SubmitButton from '@/core/components/buttons/SubmitButton';\nimport { freshDate, formatDate } from '@ohrm/core/util/helper/datefns';\nimport FileUploadInput from '@/core/components/inputs/FileUploadInput';\nimport FullNameInput from '@/orangehrmPimPlugin/components/FullNameInput';\nimport VacancyDropdown from '@/orangehrmRecruitmentPlugin/components/VacancyDropdown';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nexport default {\n  name: 'SaveCandidate',\n  components: {\n    'submit-button': SubmitButton,\n    'full-name-input': FullNameInput,\n    'vacancy-dropdown': VacancyDropdown,\n    'file-upload-input': FileUploadInput\n  },\n  props: {\n    maxFileSize: {\n      type: Number,\n      required: true\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true\n    }\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/recruitment/candidates');\n    const {\n      userDateFormat\n    } = useDateFormat();\n    return {\n      http,\n      userDateFormat\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      candidate: {\n        firstName: null,\n        middleName: null,\n        lastName: null,\n        email: null,\n        contactNumber: null,\n        keywords: null,\n        comment: null,\n        dateOfApplication: formatDate(freshDate(), 'yyyy-MM-dd'),\n        consentToKeepData: false,\n        vacancyId: null\n      },\n      resume: {\n        id: null,\n        oldAttachment: null,\n        newAttachment: null,\n        method: 'keepCurrent'\n      },\n      rules: {\n        firstName: [required, shouldNotExceedCharLength(30)],\n        lastName: [required, shouldNotExceedCharLength(30)],\n        middleName: [shouldNotExceedCharLength(30)],\n        email: [required, validEmailFormat, shouldNotExceedCharLength(50)],\n        contactNumber: [validPhoneNumberFormat, shouldNotExceedCharLength(25)],\n        notes: [shouldNotExceedCharLength(250)],\n        keywords: [shouldNotExceedCharLength(250)],\n        resume: [maxFileSize(this.maxFileSize), validFileTypes(this.allowedFileTypes)],\n        applyDate: [validDateFormat(this.userDateFormat), shouldBeCurrentOrPreviousDate()]\n      }\n    };\n  },\n  methods: {\n    onSave() {\n      let candidateId;\n      this.isLoading = true;\n      this.http.create({\n        ...this.candidate,\n        vacancyId: this.candidate.vacancyId?.id\n      }).then(({\n        data: {\n          data\n        }\n      }) => {\n        candidateId = parseInt(data.id);\n        if (!this.resume.newAttachment) return;\n        return this.http.request({\n          method: 'POST',\n          url: '/api/v2/recruitment/candidate/attachments',\n          data: {\n            candidateId,\n            attachment: this.resume.newAttachment\n          }\n        });\n      }).then(() => {\n        return this.$toast.saveSuccess();\n      }).then(() => {\n        navigate('/recruitment/addCandidate/{id}', {\n          id: candidateId\n        });\n      });\n    },\n    onCancel() {\n      navigate('/recruitment/viewCandidates');\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}