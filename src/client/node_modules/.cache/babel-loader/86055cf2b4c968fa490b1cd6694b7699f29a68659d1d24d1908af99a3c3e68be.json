{"ast":null,"code":"import { required, maxFileSize, shouldNotExceedCharLength, validFileTypes } from '@ohrm/core/util/validation/rules';\nconst attachmentModel = {\n  attachment: null,\n  comment: ''\n};\nexport default {\n  name: 'SaveInterviewAttachment',\n  props: {\n    http: {\n      type: Object,\n      required: true\n    },\n    maxFileSize: {\n      type: Number,\n      required: true\n    },\n    allowedFileTypes: {\n      type: Array,\n      required: true\n    }\n  },\n  emits: ['close'],\n  data() {\n    return {\n      isLoading: false,\n      attachment: {\n        ...attachmentModel\n      },\n      rules: {\n        comment: [shouldNotExceedCharLength(200)],\n        attachment: [required, maxFileSize(this.maxFileSize), validFileTypes(this.allowedFileTypes)]\n      }\n    };\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.create({\n        ...this.attachment\n      }).then(() => {\n        return this.$toast.saveSuccess();\n      }).then(() => {\n        this.attachment = {\n          ...attachmentModel\n        };\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}