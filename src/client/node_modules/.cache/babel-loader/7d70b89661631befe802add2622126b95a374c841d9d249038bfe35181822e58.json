{"ast":null,"code":"import { required, shouldNotExceedCharLength, validPhoneNumberFormat } from '@ohrm/core/util/validation/rules';\nconst emergencyContactModel = {\n  name: '',\n  relationship: '',\n  homePhone: '',\n  officePhone: '',\n  mobilePhone: ''\n};\nexport default {\n  name: 'EditEmergencyContact',\n  props: {\n    http: {\n      type: Object,\n      required: true\n    },\n    data: {\n      type: Object,\n      required: true\n    }\n  },\n  emits: ['close'],\n  data() {\n    return {\n      isLoading: false,\n      contact: {\n        ...emergencyContactModel\n      },\n      rules: {\n        name: [required, shouldNotExceedCharLength(100)],\n        relationship: [required, shouldNotExceedCharLength(100)],\n        homePhone: [validPhoneNumberFormat, shouldNotExceedCharLength(30), v => {\n          return v !== '' || this.contact.mobilePhone !== '' || this.contact.officePhone !== '' || this.$t('pim.at_least_one_phone_number_is_required');\n        }],\n        mobilePhone: [validPhoneNumberFormat, shouldNotExceedCharLength(30)],\n        officePhone: [validPhoneNumberFormat, shouldNotExceedCharLength(30)]\n      }\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.get(this.data.id).then(response => {\n      const {\n        data\n      } = response.data;\n      this.contact = {\n        ...emergencyContactModel,\n        ...data\n      };\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.update(this.data.id, {\n        ...this.contact\n      }).then(() => {\n        return this.$toast.updateSuccess();\n      }).then(() => {\n        this.contact = {\n          ...emergencyContactModel\n        };\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}