{"ast":null,"code":"import { computed, reactive, toRefs } from 'vue';\nimport { APIService } from '@/core/util/services/api.service';\nimport PostModal from '@/orangehrmBuzzPlugin/components/PostModal';\nimport PhotoInput from '@/orangehrmBuzzPlugin/components/PhotoInput';\nimport { shouldNotExceedCharLength } from '@/core/util/validation/rules';\nimport { OxdBuzzPostInput } from '@ohrm/oxd';\nexport default {\n  name: 'SharePhotoModal',\n  components: {\n    'post-modal': PostModal,\n    'photo-input': PhotoInput,\n    'oxd-buzz-post-input': OxdBuzzPostInput\n  },\n  props: {\n    text: {\n      type: String,\n      default: null\n    }\n  },\n  emits: ['close'],\n  setup(props, context) {\n    const rules = {\n      text: [shouldNotExceedCharLength(65530)]\n    };\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/buzz/posts');\n    const state = reactive({\n      post: {\n        text: props.text || null,\n        photos: []\n      },\n      isLoading: false\n    });\n    const onSubmit = () => {\n      state.isLoading = true;\n      http.create({\n        type: 'photo',\n        text: state.post.text,\n        photos: state.post.photos\n      }).then(() => context.emit('close', true));\n    };\n    const isDisabled = computed(() => state.post.photos.length === 0);\n    return {\n      rules,\n      onSubmit,\n      isDisabled,\n      ...toRefs(state)\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}