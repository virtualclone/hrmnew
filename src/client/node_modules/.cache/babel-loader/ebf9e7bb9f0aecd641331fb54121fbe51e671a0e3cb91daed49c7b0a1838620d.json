{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, mergeProps as _mergeProps, createVNode as _createVNode, withCtx as _withCtx, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_time_range = _resolveComponent(\"time-range\");\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_input_group = _resolveComponent(\"oxd-input-group\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" Always use inside within OXD-Grid inside OXD-Form \"), _createVNode(_component_oxd_grid_item, {\n    style: {\n      \"grid-column-start\": \"1\"\n    }\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_input_field, _mergeProps({\n      type: \"select\"\n    }, _ctx.$attrs, {\n      options: $options.options,\n      \"model-value\": $props.duration,\n      rules: $data.rules.duration,\n      \"show-empty-selector\": $props.partial,\n      required: $props.partial,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.$emit('update:duration', $event))\n    }), null, 16 /* FULL_PROPS */, [\"options\", \"model-value\", \"rules\", \"show-empty-selector\", \"required\"])]),\n    _: 1 /* STABLE */\n  }), $props.duration && $props.duration.id === 4 ? (_openBlock(), _createElementBlock(_Fragment, {\n    key: 0\n  }, [_createVNode(_component_time_range, {\n    rules: $data.rules,\n    \"from-time\": $props.fromTime,\n    \"to-time\": $props.toTime,\n    \"work-shift\": $props.workShift,\n    \"onUpdate:fromTime\": _cache[1] || (_cache[1] = $event => _ctx.$emit('update:fromTime', $event)),\n    \"onUpdate:toTime\": _cache[2] || (_cache[2] = $event => _ctx.$emit('update:toTime', $event))\n  }, null, 8 /* PROPS */, [\"rules\", \"from-time\", \"to-time\", \"work-shift\"]), _createVNode(_component_oxd_grid_item, null, {\n    default: _withCtx(() => [_createVNode(_component_oxd_input_group, {\n      label: _ctx.$t('general.duration')\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_text, {\n        class: \"orangehrm-leave-duration\",\n        tag: \"p\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString($options.selectedTimeDuration), 1 /* TEXT */)]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"label\"])]),\n    _: 1 /* STABLE */\n  })], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}