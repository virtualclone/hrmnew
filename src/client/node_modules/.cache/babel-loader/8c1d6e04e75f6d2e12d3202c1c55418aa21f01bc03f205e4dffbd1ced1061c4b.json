{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0,\n  class: \"past-employee-tag\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  return _openBlock(), _createBlock(_component_oxd_input_field, {\n    type: \"autocomplete\",\n    label: _ctx.$t('general.name'),\n    clear: false,\n    \"create-options\": $options.loadEmployees\n  }, {\n    afterSelected: _withCtx(({\n      data\n    }) => [data.isPastEmployee ? (_openBlock(), _createElementBlock(_Fragment, {\n      key: 0\n    }, [_createTextVNode(_toDisplayString(_ctx.$t('general.past_employee')), 1 /* TEXT */)], 64 /* STABLE_FRAGMENT */)) : _createCommentVNode(\"v-if\", true)]),\n    option: _withCtx(({\n      data\n    }) => [_createElementVNode(\"span\", null, _toDisplayString(data.label), 1 /* TEXT */), data.isPastEmployee ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _toDisplayString(_ctx.$t('general.past_employee')), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"label\", \"create-options\"]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}