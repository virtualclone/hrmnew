{"ast":null,"code":"import { ref, onBeforeMount, computed } from 'vue';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport { formatDate, parseDate } from '@/core/util/helper/datefns';\nimport useLocale from '@/core/util/composable/useLocale';\nexport default {\n  name: 'LeavePeriodDropdown',\n  props: {\n    modelValue: {\n      type: Object,\n      default: null\n    }\n  },\n  emits: ['update:modelValue'],\n  setup(props) {\n    const options = ref([]);\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/leave/leave-periods');\n    const {\n      jsDateFormat\n    } = useDateFormat();\n    const {\n      locale\n    } = useLocale();\n    onBeforeMount(() => {\n      http.getAll().then(({\n        data\n      }) => {\n        options.value = data.data.map(item => {\n          const startDate = formatDate(parseDate(item.startDate), jsDateFormat, {\n            locale\n          });\n          const endDate = formatDate(parseDate(item.endDate), jsDateFormat, {\n            locale\n          });\n          return {\n            id: `${item.startDate}_${item.endDate}`,\n            label: `${startDate} - ${endDate}`,\n            startDate: item.startDate,\n            endDate: item.endDate\n          };\n        });\n      });\n    });\n    const selectedPeriod = computed(() => {\n      return options.value.find(_option => _option.id === props.modelValue?.id);\n    });\n    return {\n      options,\n      selectedPeriod\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}