{"ast":null,"code":"import { computed } from 'vue';\nimport { navigate } from '@/core/util/helper/navigation';\nimport { APIService } from '@/core/util/services/api.service';\nimport usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport useSort from '@ohrm/core/util/composable/useSort';\nimport { formatDate, parseDate } from '@ohrm/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport useLocale from '@/core/util/composable/useLocale';\nconst defaultSortOrder = {\n  'performanceTracker.trackerName': 'DEFAULT',\n  'performanceTracker.addedDate': 'DEFAULT',\n  'performanceTracker.modifiedDate': 'DESC'\n};\nexport default {\n  setup() {\n    const {\n      sortDefinition,\n      sortField,\n      sortOrder,\n      onSort\n    } = useSort({\n      sortDefinition: defaultSortOrder\n    });\n    const serializedFilter = computed(() => {\n      return {\n        sortField: sortField.value,\n        sortOrder: sortOrder.value\n      };\n    });\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/performance/trackers');\n    const {\n      jsDateFormat\n    } = useDateFormat();\n    const {\n      locale\n    } = useLocale();\n    const trackerNormalizer = data => {\n      return data.map(item => {\n        return {\n          id: item.id,\n          tracker: item.trackerName,\n          addedDate: formatDate(parseDate(item.addedDate), jsDateFormat, {\n            locale\n          }),\n          modifiedDate: formatDate(parseDate(item.modifiedDate), jsDateFormat, {\n            locale\n          })\n        };\n      });\n    };\n    const {\n      currentPage,\n      total,\n      showPaginator,\n      pages,\n      pageSize,\n      response,\n      execQuery,\n      isLoading\n    } = usePaginate(http, {\n      query: serializedFilter,\n      normalizer: trackerNormalizer\n    });\n    onSort(execQuery);\n    return {\n      http,\n      total,\n      isLoading,\n      items: response,\n      execQuery,\n      sortDefinition,\n      showPaginator,\n      pages,\n      pageSize,\n      currentPage\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'tracker',\n        slot: 'title',\n        title: this.$t('performance.tracker'),\n        sortField: 'performanceTracker.trackerName',\n        style: {\n          flex: '30%'\n        }\n      }, {\n        name: 'addedDate',\n        title: this.$t('performance.added_date'),\n        sortField: 'performanceTracker.addedDate',\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'modifiedDate',\n        title: this.$t('performance.modified_date'),\n        sortField: 'performanceTracker.modifiedDate',\n        style: {\n          flex: 1\n        }\n      }, {\n        name: 'action',\n        slot: 'action',\n        title: this.$t('general.actions'),\n        style: {\n          flex: 1\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellConfig: {\n          view: {\n            onClick: this.onClickView,\n            component: 'oxd-button',\n            props: {\n              name: 'view',\n              label: this.$t('general.view'),\n              displayType: 'text'\n            }\n          }\n        }\n      }]\n    };\n  },\n  methods: {\n    onClickView(item) {\n      navigate('/performance/addPerformanceTrackerLog/trackId/{id}?mode=my', {\n        id: item.id\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}