{"ast":null,"code":"import usePaginate from '@ohrm/core/util/composable/usePaginate';\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport usei18n from '@/core/util/composable/usei18n';\nimport { OxdSpinner, OxdSwitchInput } from '@ohrm/oxd';\nexport default {\n  setup() {\n    const {\n      $t\n    } = usei18n();\n    const subscribersNormalizer = data => {\n      return data.map(item => {\n        const subscribers = Array.isArray(item.subscribers) ? item.subscribers.slice(0, 10) : [];\n        let _type = item.name;\n        switch (_type) {\n          case 'Leave Applications':\n            _type = $t('admin.leave_applications');\n            break;\n          case 'Leave Approvals':\n            _type = $t('admin.leave_approvals');\n            break;\n          case 'Leave Assignments':\n            _type = $t('admin.leave_assignments');\n            break;\n          case 'Leave Cancellations':\n            _type = $t('admin.leave_cancellation');\n            break;\n          case 'Leave Rejections':\n            _type = $t('admin.leave_rejections');\n            break;\n        }\n        return {\n          id: item.id,\n          type: _type,\n          subscribers: subscribers.map(sub => {\n            return `${sub.name} <${sub.email}>`;\n          }).join(', '),\n          enabled: item.isEnabled,\n          _loading: false\n        };\n      });\n    };\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/admin/email-subscriptions');\n    const {\n      total,\n      response,\n      isLoading\n    } = usePaginate(http, {\n      normalizer: subscribersNormalizer\n    });\n    return {\n      http,\n      isLoading,\n      total,\n      items: response\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'type',\n        slot: 'title',\n        title: this.$t('admin.notification_type'),\n        style: {\n          flex: '20%'\n        }\n      }, {\n        name: 'subscribers',\n        title: this.$t('admin.subscribers'),\n        style: {\n          flex: '65%'\n        }\n      }, {\n        name: 'actions',\n        title: this.$t('general.actions'),\n        slot: 'action',\n        style: {\n          flex: '15%'\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellRenderer: this.cellRenderer\n      }]\n    };\n  },\n  methods: {\n    cellRenderer(...args) {\n      const [index,,, row] = args;\n      const addSubscriber = {\n        component: 'oxd-icon-button',\n        props: {\n          name: 'person-plus-fill',\n          onClick: () => {\n            navigate('/admin/saveSubscriber/{id}', {\n              id: row.id\n            });\n          }\n        }\n      };\n      const switchSubscription = {\n        component: OxdSwitchInput,\n        props: {\n          modelValue: row.enabled,\n          'onUpdate:modelValue': $event => {\n            this.items.data[index]._loading = true;\n            this.http.update(row.id, {\n              enabled: $event\n            }).then(response => {\n              const {\n                data\n              } = response.data;\n              this.items.data[index].enabled = data.isEnabled;\n              this.$toast.updateSuccess();\n            }).finally(() => {\n              this.items.data[index]._loading = false;\n            });\n          },\n          style: {\n            'margin-left': '1rem',\n            'text-align': 'left'\n          }\n        }\n      };\n      const loader = {\n        component: OxdSpinner,\n        props: {\n          withContainer: false\n        }\n      };\n      return {\n        props: {\n          header: {\n            cellConfig: {\n              ...(row._loading ? {\n                loader\n              } : {\n                addSubscriber,\n                switchSubscription\n              })\n            }\n          }\n        }\n      };\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}