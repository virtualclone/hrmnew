{"ast":null,"code":"import { required, shouldNotExceedCharLength, validDateFormat, endDateShouldBeAfterStartDate } from '@ohrm/core/util/validation/rules';\nimport { yearRange } from '@ohrm/core/util/helper/year-range';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nconst immigrationModel = {\n  number: '',\n  issuedDate: '',\n  expiryDate: '',\n  type: 1,\n  status: '',\n  reviewDate: '',\n  countryCode: null,\n  comment: ''\n};\nexport default {\n  name: 'EditImmigration',\n  props: {\n    http: {\n      type: Object,\n      required: true\n    },\n    data: {\n      type: Object,\n      required: true\n    },\n    countries: {\n      type: Array,\n      default: () => []\n    }\n  },\n  emits: ['close'],\n  setup() {\n    const {\n      userDateFormat\n    } = useDateFormat();\n    return {\n      userDateFormat\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      immigration: {\n        ...immigrationModel\n      },\n      yearArray: [...yearRange()],\n      rules: {\n        number: [required, shouldNotExceedCharLength(30)],\n        expiryDate: [validDateFormat(this.userDateFormat), endDateShouldBeAfterStartDate(() => this.immigration.issuedDate, this.$t('pim.expiry_date_should_be_after_issued_date'))],\n        status: [shouldNotExceedCharLength(30)],\n        issuedDate: [validDateFormat(this.userDateFormat)],\n        reviewDate: [validDateFormat(this.userDateFormat)],\n        comment: [shouldNotExceedCharLength(250)]\n      },\n      immigrationTypeClasses: {\n        wrapper: '--gender-grouped-field',\n        label: {\n          'oxd-input-field-required': true\n        }\n      }\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.get(this.data.id).then(response => {\n      const {\n        data\n      } = response.data;\n      this.immigration = {\n        ...immigrationModel,\n        ...data\n      };\n      this.immigration.countryCode = this.countries.find(item => item.id === data.country?.code);\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.update(this.data.id, {\n        number: this.immigration.number,\n        issuedDate: this.immigration.issuedDate,\n        expiryDate: this.immigration.expiryDate,\n        type: this.immigration.type,\n        status: this.immigration.status,\n        reviewDate: this.immigration.reviewDate,\n        comment: this.immigration.comment,\n        countryCode: this.immigration.countryCode?.id\n      }).then(() => {\n        return this.$toast.updateSuccess();\n      }).then(() => {\n        this.immigration = {\n          ...immigrationModel\n        };\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}