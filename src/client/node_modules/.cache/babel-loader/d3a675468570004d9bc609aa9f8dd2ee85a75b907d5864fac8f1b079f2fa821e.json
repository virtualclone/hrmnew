{"ast":null,"code":"import { computed, ref } from 'vue';\nimport useLocale from '@/core/util/composable/useLocale';\nimport { APIService } from '@/core/util/services/api.service';\nimport { formatDate, parseDate } from '@/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport PostStats from '@/orangehrmBuzzPlugin/components/PostStats';\nimport ProfileImage from '@/orangehrmBuzzPlugin/components/ProfileImage';\nimport useBuzzAPIs from '@/orangehrmBuzzPlugin/util/composable/useBuzzAPIs';\nimport PostLikeButton from '@/orangehrmBuzzPlugin/components/PostLikeButton';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport PostCommentContainer from '@/orangehrmBuzzPlugin/components/PostCommentContainer';\nexport default {\n  name: 'PostDetails',\n  components: {\n    'post-stats': PostStats,\n    'post-like': PostLikeButton,\n    'profile-image': ProfileImage,\n    'post-comment-container': PostCommentContainer\n  },\n  props: {\n    post: {\n      type: Object,\n      required: true\n    },\n    mobile: {\n      type: Boolean,\n      default: false\n    }\n  },\n  emits: ['like', 'close', 'createComment', 'deleteComment'],\n  setup(props, context) {\n    let loading = false;\n    const {\n      locale\n    } = useLocale();\n    const {\n      jsDateFormat,\n      jsTimeFormat\n    } = useDateFormat();\n    const {\n      $tEmpName\n    } = useEmployeeNameTranslate();\n    const readMore = ref(new String(props.post?.text).length < 500);\n    const {\n      updatePostLike\n    } = useBuzzAPIs(new APIService(window.appGlobal.baseUrl, ''));\n    const postDateTime = computed(() => {\n      const {\n        createdDate,\n        createdTime\n      } = props.post;\n      const utcDate = parseDate(`${createdDate} ${createdTime} +00:00`, 'yyyy-MM-dd HH:mm xxx');\n      return formatDate(utcDate, `${jsDateFormat} ${jsTimeFormat}`, {\n        locale\n      });\n    });\n    const employeeFullName = computed(() => {\n      return $tEmpName(props.post.employee, {\n        includeMiddle: true,\n        excludePastEmpTag: false\n      });\n    });\n    const onClickClose = () => context.emit('close');\n    const onClickLike = () => {\n      if (!loading) {\n        loading = true;\n        updatePostLike(props.post.id, props.post.liked).then(() => {\n          loading = false;\n          context.emit('like');\n        });\n      }\n    };\n    const postClasses = computed(() => ({\n      'orangehrm-post-details-text': true,\n      '--truncate': readMore.value === false\n    }));\n    const onClickReadMore = () => {\n      readMore.value = !readMore.value;\n    };\n    return {\n      readMore,\n      postClasses,\n      onClickLike,\n      onClickClose,\n      postDateTime,\n      onClickReadMore,\n      employeeFullName\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}