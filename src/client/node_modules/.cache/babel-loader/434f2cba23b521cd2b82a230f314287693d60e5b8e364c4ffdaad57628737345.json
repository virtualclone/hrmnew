{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, withCtx as _withCtx, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_buzz_post_input = _resolveComponent(\"oxd-buzz-post-input\");\n  const _component_photo_input = _resolveComponent(\"photo-input\");\n  const _component_post_modal = _resolveComponent(\"post-modal\");\n  return _openBlock(), _createBlock(_component_post_modal, {\n    loading: _ctx.isLoading,\n    disabled: $setup.isDisabled,\n    title: _ctx.$t('buzz.share_photos'),\n    onSubmit: $setup.onSubmit,\n    onClose: _cache[2] || (_cache[2] = $event => _ctx.$emit('close', false))\n  }, {\n    header: _withCtx(() => [_createVNode(_component_oxd_buzz_post_input, {\n      modelValue: _ctx.post.text,\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.post.text = $event),\n      rules: $setup.rules.text,\n      placeholder: _ctx.$t('buzz.post_placeholder')\n    }, null, 8 /* PROPS */, [\"modelValue\", \"rules\", \"placeholder\"])]),\n    default: _withCtx(() => [_createVNode(_component_photo_input, {\n      modelValue: _ctx.post.photos,\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.post.photos = $event)\n    }, null, 8 /* PROPS */, [\"modelValue\"])]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"loading\", \"disabled\", \"title\", \"onSubmit\"]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}