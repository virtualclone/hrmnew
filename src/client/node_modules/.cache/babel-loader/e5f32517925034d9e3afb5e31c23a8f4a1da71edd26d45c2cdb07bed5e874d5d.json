{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, renderList as _renderList, Fragment as _Fragment, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"orangehrm-background-container\"\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-card-container\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_input_field = _resolveComponent(\"oxd-input-field\");\n  const _component_oxd_grid_item = _resolveComponent(\"oxd-grid-item\");\n  const _component_customer_autocomplete = _resolveComponent(\"customer-autocomplete\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  const _component_oxd_grid = _resolveComponent(\"oxd-grid\");\n  const _component_project_admin_autocomplete = _resolveComponent(\"project-admin-autocomplete\");\n  const _component_oxd_form_row = _resolveComponent(\"oxd-form-row\");\n  const _component_required_text = _resolveComponent(\"required-text\");\n  const _component_submit_button = _resolveComponent(\"submit-button\");\n  const _component_oxd_form_actions = _resolveComponent(\"oxd-form-actions\");\n  const _component_oxd_form = _resolveComponent(\"oxd-form\");\n  const _component_add_customer_modal = _resolveComponent(\"add-customer-modal\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createVNode(_component_oxd_text, {\n    tag: \"h6\",\n    class: \"orangehrm-main-title\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('time.add_project')), 1 /* TEXT */)]),\n\n    _: 1 /* STABLE */\n  }), _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form, {\n    loading: $data.isLoading,\n    onSubmitValid: $options.onSave\n  }, {\n    default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n      cols: 2,\n      class: \"orangehrm-full-width-grid\"\n    }, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n        default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n          modelValue: $data.project.name,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.project.name = $event),\n          label: _ctx.$t('general.name'),\n          rules: $data.rules.name,\n          required: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"label\", \"rules\"])]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_oxd_grid_item, null, {\n        default: _withCtx(() => [(_openBlock(), _createBlock(_component_customer_autocomplete, {\n          key: $data.project.customer,\n          modelValue: $data.project.customer,\n          \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.project.customer = $event),\n          rules: $data.rules.customer,\n          label: _ctx.$t('time.customer_name'),\n          required: \"\"\n        }, null, 8 /* PROPS */, [\"modelValue\", \"rules\", \"label\"])), _createVNode(_component_oxd_button, {\n          \"icon-name\": \"plus\",\n          \"display-type\": \"text\",\n          class: \"orangehrm-input-field-bottom-space\",\n          label: _ctx.$t('time.add_customer'),\n          onClick: $options.onClickAddCustomer\n        }, null, 8 /* PROPS */, [\"label\", \"onClick\"])]),\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _createVNode(_component_oxd_form_row, null, {\n      default: _withCtx(() => [_createVNode(_component_oxd_grid, {\n        cols: 2,\n        class: \"orangehrm-full-width-grid\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.project.description,\n            \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.project.description = $event),\n            type: \"textarea\",\n            label: _ctx.$t('general.description'),\n            rules: $data.rules.description,\n            placeholder: _ctx.$t('general.type_description_here')\n          }, null, 8 /* PROPS */, [\"modelValue\", \"label\", \"rules\", \"placeholder\"])]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.projectAdmins, (projectAdmin, index) => {\n            return _openBlock(), _createBlock(_component_project_admin_autocomplete, {\n              key: index,\n              modelValue: projectAdmin.value,\n              \"onUpdate:modelValue\": $event => projectAdmin.value = $event,\n              \"show-delete\": index > 0,\n              rules: $data.rules.projectAdmin,\n              \"include-employees\": \"onlyCurrent\",\n              onRemove: $event => $options.onRemoveAdmin(index)\n            }, null, 8 /* PROPS */, [\"modelValue\", \"onUpdate:modelValue\", \"show-delete\", \"rules\", \"onRemove\"]);\n          }), 128 /* KEYED_FRAGMENT */)), $data.projectAdmins.length < 5 ? (_openBlock(), _createBlock(_component_oxd_button, {\n            key: 0,\n            \"icon-name\": \"plus\",\n            \"display-type\": \"text\",\n            label: _ctx.$t('general.add_another'),\n            onClick: $options.onAddAnother\n          }, null, 8 /* PROPS */, [\"label\", \"onClick\"])) : _createCommentVNode(\"v-if\", true)]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_oxd_grid_item, null, {\n          default: _withCtx(() => [_createVNode(_component_oxd_input_field, {\n            modelValue: $data.project.forall,\n            \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.project.forall = $event),\n            type: \"checkbox\",\n            value: \"true\",\n            label: _ctx.$t('For All'),\n            \"true-value\": true,\n            \"false-value\": false\n          }, null, 8 /* PROPS */, [\"modelValue\", \"label\"])]),\n          _: 1 /* STABLE */\n        })]),\n\n        _: 1 /* STABLE */\n      })]),\n\n      _: 1 /* STABLE */\n    }), _hoisted_3, _createVNode(_component_oxd_divider), _createVNode(_component_oxd_form_actions, null, {\n      default: _withCtx(() => [_createVNode(_component_required_text), _createVNode(_component_oxd_button, {\n        \"display-type\": \"ghost\",\n        label: _ctx.$t('general.cancel'),\n        onClick: $options.onCancel\n      }, null, 8 /* PROPS */, [\"label\", \"onClick\"]), _createVNode(_component_submit_button)]),\n      _: 1 /* STABLE */\n    })]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"loading\", \"onSubmitValid\"])]), $data.showCustomerModal ? (_openBlock(), _createBlock(_component_add_customer_modal, {\n    key: 0,\n    onClose: $options.onCustomerModalClose\n  }, null, 8 /* PROPS */, [\"onClose\"])) : _createCommentVNode(\"v-if\", true)]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}