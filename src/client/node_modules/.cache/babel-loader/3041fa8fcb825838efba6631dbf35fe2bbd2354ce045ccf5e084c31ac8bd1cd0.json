{"ast":null,"code":"import { OxdDialog } from '@ohrm/oxd';\nimport { required, shouldNotExceedCharLength } from '@/core/util/validation/rules';\nimport { APIService } from '@/core/util/services/api.service';\nimport TrackerLogRatingButton from '@/orangehrmPerformancePlugin/components/TrackerLogRatingButton';\nconst trackerLogModel = {\n  log: '',\n  comment: ''\n};\nexport default {\n  name: 'EditTrackerLogModal',\n  components: {\n    'oxd-dialog': OxdDialog,\n    'tracker-log-rating-button': TrackerLogRatingButton\n  },\n  props: {\n    trackerId: {\n      type: Number,\n      required: true\n    },\n    trackerLogId: {\n      type: Number,\n      required: true\n    }\n  },\n  emits: ['close'],\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/performance/trackers/${props.trackerId}/logs`);\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      rating: true,\n      trackerLog: {\n        ...trackerLogModel\n      },\n      rules: {\n        log: [required, shouldNotExceedCharLength(150)],\n        comment: [required, shouldNotExceedCharLength(3000)]\n      }\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.get(this.trackerLogId).then(response => {\n      const {\n        data\n      } = response.data;\n      this.trackerLog.log = data.log;\n      this.trackerLog.comment = data.comment;\n      this.rating = data.achievement === '1';\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onClickPositive() {\n      this.rating = true;\n    },\n    onClickNegative() {\n      this.rating = false;\n    },\n    onSave() {\n      this.isLoading = true;\n      this.http.update(this.trackerLogId, {\n        log: this.trackerLog.log,\n        comment: this.trackerLog.comment,\n        achievement: this.rating ? 1 : 2\n      }).then(() => {\n        this.$toast.updateSuccess();\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      this.$emit('close');\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}