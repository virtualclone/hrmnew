{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { required, shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nimport { APIService } from '@/core/util/services/api.service';\nimport { OxdDialog } from '@ohrm/oxd';\nexport default {\n  name: 'SaveActivityModal',\n  components: {\n    'oxd-dialog': OxdDialog\n  },\n  props: {\n    projectId: {\n      type: Number,\n      required: true\n    },\n    activityId: {\n      type: Number,\n      required: true\n    }\n  },\n  emits: ['close'],\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/time/project/${props.projectId}/activities`);\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      name: '',\n      rules: {\n        name: [required, shouldNotExceedCharLength(100)]\n      }\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.get(this.activityId).then(response => {\n      const {\n        data\n      } = response.data;\n      this.name = data.name;\n      return this.http.getAll({\n        limit: 0\n      });\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      this.rules.name.push(v => {\n        const index = data.findIndex(item => String(item.name).toLowerCase() == String(v).toLowerCase());\n        if (index > -1) {\n          const {\n            id\n          } = data[index];\n          return id != this.activityId ? this.$t('general.already_exists') : true;\n        } else {\n          return true;\n        }\n      });\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.update(this.activityId, {\n        name: this.name\n      }).then(() => {\n        this.$toast.updateSuccess();\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}