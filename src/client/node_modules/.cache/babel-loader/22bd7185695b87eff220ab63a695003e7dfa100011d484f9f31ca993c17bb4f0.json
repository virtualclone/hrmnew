{"ast":null,"code":"import { APIService } from '@ohrm/core/util/services/api.service';\nexport default {\n  name: 'ProjectAutocomplete',\n  props: {\n    onlyAllowed: {\n      type: Boolean,\n      required: false,\n      default: true\n    },\n    excludeProjectIds: {\n      type: Array,\n      required: false,\n      default: () => []\n    },\n    excludeCustomerName: {\n      type: Boolean,\n      default: false\n    }\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/time/projects');\n    return {\n      http\n    };\n  },\n  methods: {\n    async loadProjects(serachParam) {\n      return new Promise(resolve => {\n        if (serachParam.trim()) {\n          const params = {\n            name: this.excludeCustomerName ? serachParam.trim() : undefined,\n            onlyAllowed: this.onlyAllowed,\n            model: 'detailed',\n            excludeProjectIds: this.excludeProjectIds.length > 0 ? this.excludeProjectIds : undefined,\n            customerOrProjectName: !this.excludeCustomerName ? serachParam.trim() : undefined\n          };\n          this.http.getAll(params).then(({\n            data\n          }) => {\n            resolve(data.data.map(project => {\n              return {\n                id: project.id,\n                label: this.excludeCustomerName ? project.name : `${project.customer?.name} - ${project.name}`,\n                _customer: project.customer\n              };\n            }));\n          });\n        } else {\n          resolve([]);\n        }\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}