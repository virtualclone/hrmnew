{"ast":null,"code":"import { OxdDialog } from '@ohrm/oxd';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport { formatDate, parseDate } from '@/core/util/helper/datefns';\nimport useLocale from '@/core/util/composable/useLocale';\nexport default {\n  name: 'LeaveBalanceInsufficientModal',\n  components: {\n    'oxd-dialog': OxdDialog\n  },\n  props: {\n    data: {\n      type: Array,\n      required: true\n    },\n    meta: {\n      type: Object,\n      default: () => null\n    }\n  },\n  emits: ['close'],\n  setup() {\n    const {\n      jsDateFormat\n    } = useDateFormat();\n    const {\n      locale\n    } = useLocale();\n    return {\n      locale,\n      jsDateFormat\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        title: this.$t('leave.leave_period'),\n        name: 'period',\n        style: {\n          flex: 1\n        }\n      }, {\n        title: this.$t('general.date'),\n        name: 'date',\n        style: {\n          flex: 1\n        }\n      }, {\n        title: this.$t('leave.available_balance'),\n        name: 'balance',\n        style: {\n          flex: 1\n        }\n      }]\n    };\n  },\n  computed: {\n    items() {\n      if (this.data.length > 0) {\n        const leavePeriods = this.data.map(item => item.period);\n        return leavePeriods.flatMap((period, index) => {\n          return this.data[index].leaves.map(leave => {\n            const startDate = formatDate(parseDate(period.startDate), this.jsDateFormat, {\n              locale: this.locale\n            });\n            const endDate = formatDate(parseDate(period.endDate), this.jsDateFormat, {\n              locale: this.locale\n            });\n            const leaveDate = formatDate(parseDate(leave.date), this.jsDateFormat, {\n              locale: this.locale\n            });\n            return {\n              period: `${startDate} - ${endDate}`,\n              date: leaveDate,\n              balance: leave.status?.name || leave.balance.toFixed(2)\n            };\n          });\n        });\n      }\n      return [];\n    },\n    leaveType() {\n      return this.meta?.leaveType?.name;\n    },\n    employeeName() {\n      const employee = this.meta?.employee;\n      if (employee) {\n        return `${employee.firstName} ${employee.lastName}\n          ${employee.terminationId ? this.$t('general.past_employee') : ''}`;\n      }\n      return '';\n    },\n    leaveBalance() {\n      return this.data[0]?.balance ? `${parseFloat(this.data[0].balance.balance).toFixed(2)} Day(s)` : '0.00 Day(s)';\n    }\n  },\n  methods: {\n    onCancel() {\n      this.$emit('close', true);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}