{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport { required, shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nexport default {\n  props: {\n    reportingMethodId: {\n      type: Number,\n      required: true\n    }\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/pim/reporting-methods');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      reportingMethod: {\n        id: '',\n        name: ''\n      },\n      rules: {\n        name: [required, shouldNotExceedCharLength(100)]\n      }\n    };\n  },\n  created() {\n    this.isLoading = true;\n    this.http.get(this.reportingMethodId).then(response => {\n      const {\n        data\n      } = response.data;\n      this.reportingMethod.id = data.id;\n      this.reportingMethod.name = data.name;\n      // Fetch list data for unique test\n      return this.http.getAll({\n        limit: 0\n      });\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      this.rules.name.push(v => {\n        const index = data.findIndex(item => item.name === v);\n        if (index > -1) {\n          const {\n            id\n          } = data[index];\n          return id !== this.reportingMethod.id ? this.$t('general.already_exists') : true;\n        } else {\n          return true;\n        }\n      });\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.update(this.reportingMethodId, {\n        name: this.reportingMethod.name\n      }).then(() => {\n        return this.$toast.updateSuccess();\n      }).then(() => {\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      navigate('/pim/viewReportingMethods');\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}