{"ast":null,"code":"import EmployeeAutocomplete from '@/core/components/inputs/EmployeeAutocomplete';\nimport { APIService } from '@/core/util/services/api.service';\nexport default {\n  name: 'ReviewersAutoComplete',\n  components: {\n    'employee-autocomplete': EmployeeAutocomplete\n  },\n  props: {\n    includeEmployees: {\n      type: String,\n      default: 'onlyCurrent'\n    },\n    excludeEmployee: {\n      type: Object,\n      required: false,\n      default: null\n    }\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/performance/trackers/reviewers');\n    return {\n      http\n    };\n  },\n  methods: {\n    async loadEmployees(searchParam) {\n      return new Promise(resolve => {\n        if (searchParam.trim()) {\n          this.http.getAll({\n            nameOrId: searchParam.trim(),\n            empNumber: this.excludeEmployee == null ? null : this.excludeEmployee.id //to be added back when a seperate API is created for reviewers\n          }).then(({\n            data\n          }) => {\n            resolve(data.data.map(employee => {\n              return {\n                id: employee.empNumber,\n                label: `${employee.firstName} ${employee.middleName} ${employee.lastName}`,\n                isPastEmployee: employee.terminationId ? true : false\n              };\n            }));\n          });\n        } else {\n          resolve([]);\n        }\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}