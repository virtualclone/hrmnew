{"ast":null,"code":"import { APIService } from '@/core/util/services/api.service';\nimport { OxdDialog } from '@ohrm/oxd';\nimport { required, validSelection } from '@ohrm/core/util/validation/rules';\nimport ProjectAutocomplete from '@/orangehrmTimePlugin/components/ProjectAutocomplete.vue';\nexport default {\n  name: 'CopyActivityModal',\n  components: {\n    'oxd-dialog': OxdDialog,\n    'project-autocomplete': ProjectAutocomplete\n  },\n  props: {\n    projectId: {\n      type: Number,\n      required: true\n    }\n  },\n  emits: ['close'],\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      project: null,\n      activities: null,\n      selectedActivities: [],\n      rules: {\n        project: [required, validSelection, () => {\n          if (this.activities !== null && this.activities.length === 0) {\n            return this.$t('time.no_assigned_activities');\n          } else if (Array.isArray(this.activities) && this.selectedActivities.length === 0) {\n            const hasUnique = this.activities.find(activity => activity.unique === true);\n            return hasUnique ? this.$t('time.no_activities_selected') : this.$t('general.already_exists');\n          } else {\n            return true;\n          }\n        }]\n      }\n    };\n  },\n  watch: {\n    project(value) {\n      this.activities = null;\n      this.selectedActivities = [];\n      if (value) {\n        this.isLoading = true;\n        this.http.request({\n          method: 'GET',\n          url: `/api/v2/time/projects/${this.projectId}/activities/copy/${value.id}`,\n          params: {\n            limit: 0\n          }\n        }).then(response => {\n          const {\n            data\n          } = response.data;\n          this.activities = data;\n          this.selectedActivities = Array.isArray(data) ? data.filter(activity => activity.unique === true).map(activity => activity.id) : [];\n          this.isLoading = false;\n        });\n      }\n    }\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.request({\n        method: 'POST',\n        url: `/api/v2/time/projects/${this.projectId}/activities/copy/${this.project.id}`,\n        data: {\n          activityIds: this.selectedActivities\n        }\n      }).then(() => {\n        this.$toast.updateSuccess();\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}