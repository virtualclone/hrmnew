{"ast":null,"code":"import { APIService } from '@ohrm/core/util/services/api.service';\nimport { required, shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nimport { OxdDialog, promiseDebounce } from '@ohrm/oxd';\nconst customerModel = {\n  id: '',\n  name: '',\n  description: ''\n};\nexport default {\n  name: 'AddCustomerModal',\n  components: {\n    'oxd-dialog': OxdDialog\n  },\n  emits: ['close'],\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/time/customers');\n    http.setIgnorePath('/api/v2/time/validation/customer-name');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      customer: {\n        ...customerModel\n      },\n      rules: {\n        name: [required, shouldNotExceedCharLength(50), promiseDebounce(this.validateCustomerName, 500)],\n        description: [shouldNotExceedCharLength(255)]\n      }\n    };\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.create({\n        name: this.customer.name,\n        description: this.customer.description\n      }).then(response => {\n        const {\n          data\n        } = response.data;\n        this.$toast.saveSuccess();\n        this.$emit('close', data);\n      });\n    },\n    onCancel() {\n      this.$emit('close');\n    },\n    validateCustomerName(customer) {\n      return new Promise(resolve => {\n        if (customer) {\n          this.http.request({\n            method: 'GET',\n            url: `/api/v2/time/validation/customer-name`,\n            params: {\n              customerName: this.customer.name.trim()\n            }\n          }).then(response => {\n            const {\n              data\n            } = response.data;\n            return data.valid === true ? resolve(true) : resolve(this.$t('general.already_exists'));\n          });\n        } else {\n          resolve(true);\n        }\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}