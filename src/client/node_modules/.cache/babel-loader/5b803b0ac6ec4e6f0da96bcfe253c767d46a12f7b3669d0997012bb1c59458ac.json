{"ast":null,"code":"import { ref, toRefs } from 'vue';\nimport FullNameInput from '@/orangehrmPimPlugin/components/FullNameInput';\nimport SuccessDialog from '@/orangehrmRecruitmentPlugin/components/SuccessDialog';\nimport { maxFileSize, required, shouldNotExceedCharLength, validEmailFormat, validFileTypes, validPhoneNumberFormat } from '@ohrm/core/util/validation/rules';\nimport SubmitButton from '@/core/components/buttons/SubmitButton';\nimport { navigate } from '@/core/util/helper/navigation';\nimport { APIService } from '@/core/util/services/api.service';\nimport { urlFor } from '@/core/util/helper/url';\nimport { useResponsive } from '@ohrm/oxd';\nconst applicantModel = {\n  firstName: '',\n  middleName: '',\n  lastName: '',\n  contactNumber: '',\n  email: '',\n  consentToKeepData: false,\n  resume: null,\n  keywords: null,\n  comment: null\n};\nexport default {\n  name: 'ApplyJobVacancy',\n  components: {\n    'submit-button': SubmitButton,\n    'full-name-input': FullNameInput,\n    'success-dialogue': SuccessDialog\n  },\n  props: {\n    allowedFileTypes: {\n      type: Array,\n      required: true\n    },\n    maxFileSize: {\n      type: Number,\n      required: true\n    },\n    vacancyId: {\n      type: Number,\n      required: true\n    },\n    success: {\n      type: Boolean,\n      default: false\n    },\n    bannerSrc: {\n      type: String,\n      required: true\n    },\n    token: {\n      type: String,\n      required: true\n    }\n  },\n  setup() {\n    const defaultPic = `${window.appGlobal.publicPath}/images/ohrm_branding.png`;\n    const applicant = ref({\n      ...applicantModel\n    });\n    const responsiveState = useResponsive();\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/recruitment/public/vacancies');\n    return {\n      http,\n      applicant,\n      defaultPic,\n      ...toRefs(responsiveState)\n    };\n  },\n  data() {\n    return {\n      title: null,\n      subtitle: null,\n      successLabel: null,\n      isLoading: false,\n      vacancyName: '',\n      vacancyDescription: null,\n      rules: {\n        firstName: [required, shouldNotExceedCharLength(30)],\n        middleName: [shouldNotExceedCharLength(30)],\n        lastName: [required, shouldNotExceedCharLength(30)],\n        resume: [required, maxFileSize(this.maxFileSize), validFileTypes(this.allowedFileTypes)],\n        comment: [shouldNotExceedCharLength(250)],\n        keywords: [shouldNotExceedCharLength(250)],\n        contactNumber: [shouldNotExceedCharLength(25), validPhoneNumberFormat],\n        email: [required, validEmailFormat, shouldNotExceedCharLength(50)]\n      },\n      isViewDetails: true\n    };\n  },\n  computed: {\n    submitUrl() {\n      return urlFor('/recruitment/public/applicants');\n    },\n    descriptionClasses() {\n      return {\n        'orangehrm-vacancy-description': true,\n        'orangehrm-vacancy-card-body': !this.isViewDetails\n      };\n    },\n    isMobile() {\n      return this.windowWidth < 600;\n    },\n    descriptionLength() {\n      if (this.isMobile) return 150;\n      return this.windowWidth < 1920 ? 250 : 400;\n    }\n  },\n  beforeMount() {\n    this.http.get(this.vacancyId).then(response => {\n      const {\n        data\n      } = response.data;\n      this.vacancyName = data?.name ?? '';\n      this.vacancyDescription = data?.description;\n    });\n  },\n  mounted() {\n    if (this.success) {\n      this.showDialogue();\n    }\n  },\n  methods: {\n    onSave() {\n      this.$refs.applicantForm.$el.submit();\n    },\n    onCancel() {\n      navigate('/recruitmentApply/jobs.html');\n    },\n    showDialogue() {\n      this.$refs.showDialogueModal.showSuccessDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          navigate('/recruitmentApply/jobs.html');\n        }\n      });\n    },\n    onToggleMore() {\n      this.isViewDetails = !this.isViewDetails;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}