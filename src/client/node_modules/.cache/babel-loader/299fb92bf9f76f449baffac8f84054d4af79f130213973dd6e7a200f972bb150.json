{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, withCtx as _withCtx, createVNode as _createVNode, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-47bf13c8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  class: \"orangehrm-horizontal-padding orangehrm-vertical-padding\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_oxd_divider = _resolveComponent(\"oxd-divider\");\n  const _component_oxd_text = _resolveComponent(\"oxd-text\");\n  const _component_oxd_button = _resolveComponent(\"oxd-button\");\n  return !$props.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [$props.showDivider ? (_openBlock(), _createBlock(_component_oxd_divider, {\n    key: 0,\n    class: \"orangehrm-horizontal-margin\"\n  })) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_2, [$props.selected > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [_createVNode(_component_oxd_text, {\n    tag: \"span\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('general.n_records_selected', {\n      count: $props.selected\n    })), 1 /* TEXT */)]),\n\n    _: 1 /* STABLE */\n  }), _createVNode(_component_oxd_button, {\n    label: _ctx.$t('general.delete_selected'),\n    \"icon-name\": \"trash-fill\",\n    \"display-type\": \"label-danger\",\n    class: \"orangehrm-horizontal-margin\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit('delete', $event))\n  }, null, 8 /* PROPS */, [\"label\"])])) : (_openBlock(), _createBlock(_component_oxd_text, {\n    key: 1,\n    tag: \"span\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString(_ctx.$t('general.n_records_found', {\n      count: $props.total\n    })), 1 /* TEXT */)]),\n\n    _: 1 /* STABLE */\n  }))])])) : _createCommentVNode(\"v-if\", true);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}