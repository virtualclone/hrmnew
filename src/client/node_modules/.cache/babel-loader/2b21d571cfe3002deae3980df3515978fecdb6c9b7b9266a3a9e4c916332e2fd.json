{"ast":null,"code":"import { APIService } from '@ohrm/core/util/services/api.service';\nimport EditEmployeeLayout from '@/orangehrmPimPlugin/components/EditEmployeeLayout';\nimport { shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nconst taxExemptionModel = {\n  federalStatus: null,\n  federalExemptions: null,\n  taxStateCode: [],\n  stateStatus: null,\n  stateExemptions: null,\n  unemploymentStateCode: [],\n  workStateCode: []\n};\nexport default {\n  components: {\n    'edit-employee-layout': EditEmployeeLayout\n  },\n  props: {\n    empNumber: {\n      type: String,\n      required: true\n    },\n    provinces: {\n      type: Array,\n      default: () => []\n    },\n    statuses: {\n      type: Array,\n      default: () => []\n    }\n  },\n  setup(props) {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/pim/employees/${props.empNumber}/tax-exemption`);\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      taxExemption: {\n        ...taxExemptionModel\n      },\n      rules: {\n        federalExemptions: [v => {\n          return v.match(/^\\d*\\.?\\d*$/) !== null || this.$t('general.should_be_a_positive_number');\n        }, shouldNotExceedCharLength(2)],\n        stateExemptions: [v => {\n          return v.match(/^\\d*\\.?\\d*$/) !== null || this.$t('general.should_be_a_positive_number');\n        }, shouldNotExceedCharLength(2)]\n      }\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.getAll().then(response => {\n      this.updateModel(response);\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.request({\n        method: 'PUT',\n        data: {\n          federalStatus: this.taxExemption.federalStatus?.id,\n          federalExemptions: this.taxExemption.federalExemptions,\n          taxStateCode: this.taxExemption.taxState?.id,\n          stateStatus: this.taxExemption.stateStatus?.id,\n          stateExemptions: this.taxExemption.stateExemptions,\n          unemploymentStateCode: this.taxExemption.unemploymentState?.id,\n          workStateCode: this.taxExemption.workState?.id\n        }\n      }).then(response => {\n        this.updateModel(response);\n        return this.$toast.updateSuccess();\n      }).then(() => {\n        this.isLoading = false;\n      });\n    },\n    updateModel(response) {\n      const {\n        data\n      } = response.data;\n      this.taxExemption.federalExemptions = data.federalExemptions;\n      this.taxExemption.stateExemptions = data.stateExemptions;\n      this.taxExemption.taxState = this.provinces.find(item => item.id === data.taxState.code);\n      this.taxExemption.unemploymentState = this.provinces.find(item => item.id === data.unemploymentState.code);\n      this.taxExemption.workState = this.provinces.find(item => item.id === data.workState.code);\n      this.taxExemption.federalStatus = this.statuses.find(item => item.id === data.federalStatus);\n      this.taxExemption.stateStatus = this.statuses.find(item => item.id === data.stateStatus);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}