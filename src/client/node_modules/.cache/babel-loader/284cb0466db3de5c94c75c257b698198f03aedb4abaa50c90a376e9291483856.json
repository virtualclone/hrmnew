{"ast":null,"code":"import { ref, onBeforeMount, watch } from 'vue';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nexport default {\n  name: 'EmployeeDropdown',\n  // inheritAttrs: false,\n  props: {\n    projectId: {\n      required: true,\n      default: null\n    }\n  },\n  setup(props) {\n    const options = ref([]);\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/pim/employees');\n    // '/api/v2/time/project-admins'\n    const myArray = [8, 301, 42, 13, 4];\n    watch(() => props.projectId, async newProjectId => {\n      if (newProjectId !== null) {\n        http.request({\n          method: 'GET',\n          url: `/api/v2/time/project-admins/${newProjectId}`,\n          params: {\n            projectId: newProjectId\n          }\n        }).then(({\n          data\n        }) => {\n          console.log(data, 'received data');\n          // options.value = data.data.map((employee) => ({\n          //     id: employee.empNumber,\n          //     label: `${employee.firstName} ${employee.middleName} ${employee.lastName}`,\n          // }));\n          // console.log(options);\n        });\n        // console.log(\"after if\",this.options)\n      }\n    });\n\n    onBeforeMount(() => {\n      // Assuming myArray is an array of empNumbers like [8, 15, 23]\n      const requests = myArray.map(empNumber => {\n        return http.getAll({\n          empNumber,\n          limit: 0\n        }).then(({\n          data\n        }) => {\n          return data.data.map(employee => ({\n            id: employee.empNumber,\n            label: `${employee.firstName} ${employee.middleName} ${employee.lastName}`\n          }));\n        });\n      });\n\n      // Use Promise.all to wait for all requests to complete\n      Promise.all(requests).then(results => {\n        // Merge the results from all requests into a single options array\n        options.value = [].concat(...results);\n      }).catch(error => {\n        // Handle errors here\n        console.error(error);\n      });\n    });\n    // onBeforeMount(() => {\n    //     http.getAll({ empNumber:myArray, limit: 0 }).then(({ data }) => {\n    //         options.value = data.data.map((employee) => {\n    //             return {\n    //                 id: employee.empNumber,\n    //                 label: `${employee.firstName} ${employee.middleName} ${employee.lastName}`,\n    //             };\n    //         });\n    //     });\n    // });\n    return {\n      options\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}