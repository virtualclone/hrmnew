{"ast":null,"code":"import { required, validDateFormat, shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nconst dependentModel = {\n  name: '',\n  relationshipType: null,\n  relationship: '',\n  dateOfBirth: ''\n};\nexport default {\n  name: 'SaveDependent',\n  props: {\n    http: {\n      type: Object,\n      required: true\n    }\n  },\n  emits: ['close'],\n  setup() {\n    const {\n      userDateFormat\n    } = useDateFormat();\n    return {\n      userDateFormat\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      dependent: {\n        ...dependentModel\n      },\n      rules: {\n        name: [required, shouldNotExceedCharLength(100)],\n        relationshipType: [required],\n        relationship: [required, shouldNotExceedCharLength(100)],\n        dateOfBirth: [validDateFormat(this.userDateFormat)]\n      },\n      relationshipOptions: [{\n        id: 'child',\n        label: this.$t('pim.child')\n      }, {\n        id: 'other',\n        label: this.$t('pim.other')\n      }]\n    };\n  },\n  computed: {\n    showRelationship() {\n      return this.dependent.relationshipType?.id == 'other';\n    }\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.create({\n        ...this.dependent,\n        relationshipType: this.dependent.relationshipType?.id\n      }).then(() => {\n        return this.$toast.saveSuccess();\n      }).then(() => {\n        this.dependent = {\n          ...dependentModel\n        };\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}