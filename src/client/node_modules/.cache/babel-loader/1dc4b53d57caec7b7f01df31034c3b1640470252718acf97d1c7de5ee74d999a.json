{"ast":null,"code":"import useLocale from '@/core/util/composable/useLocale';\nimport { APIService } from '@/core/util/services/api.service';\nimport { parseDate, formatDate } from '@/core/util/helper/datefns';\nimport ProfileImage from '@/orangehrmBuzzPlugin/components/ProfileImage';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nexport default {\n  name: 'UpcomingAnniversaries',\n  components: {\n    'profile-image': ProfileImage\n  },\n  setup() {\n    const {\n      locale\n    } = useLocale();\n    const {\n      $tEmpName\n    } = useEmployeeNameTranslate();\n    const celebrationPic = `${window.appGlobal.publicPath}/images/year_celebration.png`;\n    const noContentPic = `${window.appGlobal.publicPath}/images/buzz_no_anniversaries.png`;\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/buzz/anniversaries');\n    return {\n      http,\n      locale,\n      noContentPic,\n      celebrationPic,\n      tEmpName: $tEmpName\n    };\n  },\n  data() {\n    return {\n      viewMore: false,\n      isLoading: false,\n      anniversaries: [],\n      anniversariesCount: 0\n    };\n  },\n  computed: {\n    isViewDetails() {\n      return !this.viewMore;\n    },\n    isEmpty() {\n      return !this.isLoading && this.anniversaries.length === 0;\n    }\n  },\n  beforeMount() {\n    this.anniversariesLimit = 5;\n    this.getAnniversaries();\n  },\n  methods: {\n    onSeeMore() {\n      this.viewMore = !this.viewMore;\n      if (this.viewMore) {\n        this.anniversariesLimit = 0;\n      } else {\n        this.anniversariesLimit = 5;\n      }\n      this.getAnniversaries();\n    },\n    getAnniversaries() {\n      this.isLoading = true;\n      this.http.getAll({\n        limit: this.anniversariesLimit\n      }).then(response => {\n        const {\n          data,\n          meta\n        } = response.data;\n        this.anniversaries = data.map(item => {\n          const {\n            employee,\n            jobTitle,\n            joinedDate\n          } = item;\n          return {\n            empNumber: employee.empNumber,\n            empName: this.tEmpName(employee, {\n              includeMiddle: false,\n              excludePastEmpTag: false\n            }),\n            jobTitle: jobTitle.title,\n            joinedDate: formatDate(parseDate(joinedDate), 'MMM dd', {\n              locale: this.locale\n            }),\n            anniversaryYear: new Date().getFullYear() - new Date(joinedDate).getFullYear()\n          };\n        });\n        this.anniversariesCount = meta?.total;\n      }).finally(() => this.isLoading = false);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}