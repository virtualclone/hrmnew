{"ast":null,"code":"import { APIService } from '@/core/util/services/api.service';\nimport { reloadPage } from '@/core/util/helper/navigation';\nimport { OxdSwitchInput } from '@ohrm/oxd';\nconst modulesModel = {\n  admin: false,\n  pim: false,\n  leave: false,\n  time: false,\n  recruitment: false,\n  performance: false,\n  maintenance: false,\n  mobile: false,\n  directory: false,\n  claim: false,\n  reports: false,\n  loan: false\n};\nexport default {\n  components: {\n    'oxd-switch-input': OxdSwitchInput\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/admin/modules');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      modules: {\n        ...modulesModel\n      },\n      isLoading: false\n    };\n  },\n  created() {\n    this.isLoading = true;\n    this.http.getAll().then(response => {\n      const {\n        data\n      } = response.data;\n      this.modules.admin = data.admin;\n      this.modules.pim = data.pim;\n      this.modules.leave = data.leave;\n      this.modules.time = data.time;\n      this.modules.recruitment = data.recruitment;\n      this.modules.performance = data.performance;\n      this.modules.maintenance = data.maintenance;\n      this.modules.mobile = data.mobile;\n      this.modules.directory = data.directory;\n      this.modules.claim = data.claim;\n      this.modules.reports = data.reports;\n      this.modules.loan = data.loan;\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      const payload = {\n        admin: true,\n        pim: true,\n        leave: this.modules.leave,\n        time: this.modules.time,\n        recruitment: this.modules.recruitment,\n        performance: this.modules.performance,\n        maintenance: this.modules.maintenance,\n        mobile: this.modules.mobile,\n        directory: this.modules.directory,\n        claim: this.modules.claim,\n        reports: this.modules.reports,\n        loan: this.modules.loan\n      };\n      this.http.request({\n        method: 'PUT',\n        data: payload\n      }).then(response => {\n        const {\n          data\n        } = response.data;\n        this.modules = data;\n        return this.$toast.saveSuccess();\n      }).finally(() => {\n        this.isLoading = false;\n        reloadPage();\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}