{"ast":null,"code":"import { APIService } from '@ohrm/core/util/services/api.service';\nimport { OxdDialog } from '@ohrm/oxd';\nexport default {\n  name: 'EntitlementBulkUpdateModal',\n  components: {\n    'oxd-dialog': OxdDialog\n  },\n  props: {\n    data: {\n      type: Object,\n      required: true\n    }\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/leave/employees/leave-entitlements');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      show: false,\n      reject: null,\n      resolve: null,\n      headers: [{\n        title: this.$t('general.employee'),\n        name: 'employee',\n        slot: 'title',\n        style: {\n          flex: 1\n        }\n      }, {\n        title: this.$t('leave.old_entitlement'),\n        name: 'current',\n        style: {\n          flex: 1\n        }\n      }, {\n        title: this.$t('leave.new_entitlement'),\n        name: 'updateAs',\n        style: {\n          flex: 1\n        }\n      }],\n      items: []\n    };\n  },\n  methods: {\n    showDialog() {\n      return this.http.getAll({\n        leaveTypeId: this.data.leaveType?.id,\n        fromDate: this.data.leavePeriod?.startDate,\n        toDate: this.data.leavePeriod?.endDate,\n        entitlement: this.data.entitlement,\n        locationId: this.data.location?.id,\n        subunitId: this.data.subunit?.id\n      }).then(response => {\n        const {\n          data\n        } = response.data;\n        this.items = Array.isArray(data) ? data.map(item => {\n          return {\n            employee: `${item.firstName} ${item.lastName}`,\n            current: item.entitlement?.current ? parseFloat(item.entitlement.current).toFixed(2) : '0.00',\n            updateAs: item.entitlement?.updateAs ? parseFloat(item.entitlement.updateAs).toFixed(2) : '0.00'\n          };\n        }) : [];\n        return new Promise((resolve, reject) => {\n          this.resolve = resolve;\n          this.reject = reject;\n          this.show = true;\n        });\n      });\n    },\n    onConfirm() {\n      this.show = false;\n      this.resolve && this.resolve('ok');\n    },\n    onCancel() {\n      this.show = false;\n      this.resolve && this.resolve('cancel');\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}