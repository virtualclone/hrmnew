{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@ohrm/core/util/services/api.service';\nimport { required, validSelection, validTimeFormat, shouldNotExceedCharLength, endTimeShouldBeAfterStartTime } from '@ohrm/core/util/validation/rules';\nimport { diffInTime } from '@/core/util/helper/datefns';\nimport WorkShiftEmployeeAutocomplete from '@/orangehrmAdminPlugin/components/WorkShiftEmployeeAutocomplete';\nconst workShiftModel = {\n  id: '',\n  name: '',\n  hoursPerDay: '',\n  startTime: '',\n  endTime: '',\n  empNumbers: []\n};\nexport default {\n  components: {\n    'work-shift-employee-autocomplete': WorkShiftEmployeeAutocomplete\n  },\n  props: {\n    workShiftConfig: {\n      type: Object,\n      required: true,\n      default: () => ({})\n    }\n  },\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/admin/work-shifts');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      workShift: {\n        ...workShiftModel\n      },\n      rules: {\n        name: [required, shouldNotExceedCharLength(50)],\n        fromTime: [required, validTimeFormat],\n        endTime: [required, validTimeFormat, endTimeShouldBeAfterStartTime(() => this.workShift.startTime, this.$t('general.to_time_should_be_after_from_time'))],\n        empNumbers: [validSelection]\n      }\n    };\n  },\n  computed: {\n    selectedTimeDuration() {\n      return parseFloat(diffInTime(this.workShift.startTime, this.workShift.endTime) / 3600).toFixed(2);\n    }\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.workShift.startTime = this.workShiftConfig.startTime;\n    this.workShift.endTime = this.workShiftConfig.endTime;\n    this.http.getAll({\n      limit: 0\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      this.rules.name.push(v => {\n        const index = data.findIndex(item => String(item.name).toLowerCase() == String(v).toLowerCase());\n        return index === -1 || this.$t('general.already_exists');\n      });\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      const payload = {\n        name: this.workShift.name,\n        hoursPerDay: this.selectedTimeDuration,\n        startTime: this.workShift.startTime,\n        endTime: this.workShift.endTime,\n        empNumbers: this.workShift.empNumbers.map(employee => employee.id)\n      };\n      this.http.create(payload).then(() => {\n        return this.$toast.saveSuccess();\n      }).then(() => {\n        this.workShift = {\n          ...workShiftModel\n        };\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      navigate('/admin/workShift');\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}