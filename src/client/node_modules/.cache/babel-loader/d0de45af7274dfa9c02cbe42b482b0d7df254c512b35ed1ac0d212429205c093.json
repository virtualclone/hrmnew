{"ast":null,"code":"import { ref, onBeforeMount } from 'vue';\nimport usei18n from '@/core/util/composable/usei18n';\nimport { APIService } from '@/core/util/services/api.service';\nexport default {\n  name: 'VacancyDropdown',\n  props: {\n    status: {\n      type: Boolean,\n      required: false,\n      default: null\n    },\n    excludeInterviewers: {\n      type: Boolean,\n      required: false,\n      default: false\n    }\n  },\n  setup(props) {\n    const options = ref([]);\n    const {\n      $t\n    } = usei18n();\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/recruitment/vacancies');\n    onBeforeMount(() => {\n      const params = {\n        model: 'summary',\n        limit: 0\n      };\n      if (props.status !== null) {\n        params.status = props.status;\n      }\n      params.excludeInterviewers = props.excludeInterviewers;\n      http.getAll(params).then(({\n        data\n      }) => {\n        options.value = data.data.map(item => {\n          return {\n            id: item.id,\n            label: item.status === false ? `${item.name} (${$t('general.closed')})` : item.name\n          };\n        });\n      });\n    });\n    return {\n      options\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}