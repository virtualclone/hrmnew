{"ast":null,"code":"import { computed, reactive, toRefs } from 'vue';\nimport useToast from '@/core/util/composable/useToast';\nimport useLocale from '@/core/util/composable/useLocale';\nimport { APIService } from '@/core/util/services/api.service';\nimport { formatDate, parseDate } from '@/core/util/helper/datefns';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport PostModal from '@/orangehrmBuzzPlugin/components/PostModal';\nimport PhotoFrame from '@/orangehrmBuzzPlugin/components/PhotoFrame';\nimport VideoFrame from '@/orangehrmBuzzPlugin/components/VideoFrame';\nimport { shouldNotExceedCharLength } from '@/core/util/validation/rules';\nimport useEmployeeNameTranslate from '@/core/util/composable/useEmployeeNameTranslate';\nimport { OxdBuzzPostInput } from '@ohrm/oxd';\nexport default {\n  name: 'SharePostModal',\n  components: {\n    'post-modal': PostModal,\n    'photo-frame': PhotoFrame,\n    'video-frame': VideoFrame,\n    'oxd-buzz-post-input': OxdBuzzPostInput\n  },\n  props: {\n    data: {\n      type: Object,\n      required: true\n    }\n  },\n  emits: ['close'],\n  setup(props, context) {\n    const {\n      locale\n    } = useLocale();\n    const {\n      saveSuccess\n    } = useToast();\n    const {\n      jsDateFormat,\n      jsTimeFormat\n    } = useDateFormat();\n    const {\n      $tEmpName\n    } = useEmployeeNameTranslate();\n    const rules = {\n      text: [shouldNotExceedCharLength(65530)]\n    };\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/buzz/shares');\n    const state = reactive({\n      post: {\n        text: null\n      },\n      isLoading: false\n    });\n    const onSubmit = () => {\n      state.isLoading = true;\n      http.create({\n        text: state.post.text,\n        shareId: props.data.id\n      }).then(() => {\n        saveSuccess();\n        context.emit('close', true);\n      });\n    };\n    const originalPost = computed(() => {\n      const originalText = props.data.originalPost?.text || props.data.text;\n      const originalEmployee = props.data.originalPost?.employee || props.data.employee;\n      const {\n        createdDate,\n        createdTime\n      } = props.data.originalPost || props.data;\n      const utcDate = parseDate(`${createdDate} ${createdTime} +00:00`, 'yyyy-MM-dd HH:mm xxx');\n      return {\n        text: originalText,\n        employee: $tEmpName(originalEmployee, {\n          includeMiddle: true,\n          excludePastEmpTag: false\n        }),\n        dateTime: formatDate(utcDate, `${jsDateFormat} ${jsTimeFormat}`, {\n          locale\n        })\n      };\n    });\n    return {\n      rules,\n      onSubmit,\n      originalPost,\n      ...toRefs(state)\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}