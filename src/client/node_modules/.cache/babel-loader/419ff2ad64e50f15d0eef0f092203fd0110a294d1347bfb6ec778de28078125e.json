{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { APIService } from '@/core/util/services/api.service';\nimport { required, shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nimport { OxdDialog } from '@ohrm/oxd';\nimport SupervisorDropdown from '@/orangehrmAdminPlugin/components/SupervisorDropdown';\nconst orgUnitModel = {\n  unitId: '',\n  name: '',\n  description: '',\n  empNumber: null\n};\nexport default {\n  name: 'SaveOrgUnit',\n  components: {\n    'oxd-dialog': OxdDialog,\n    'supervisor-dropdown': SupervisorDropdown\n  },\n  props: {\n    data: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  emits: ['close'],\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/admin/subunits');\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      orgUnit: {\n        ...orgUnitModel\n      },\n      rules: {\n        unitId: [shouldNotExceedCharLength(100)],\n        name: [required, shouldNotExceedCharLength(100)],\n        description: [shouldNotExceedCharLength(400)]\n      }\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.getAll().then(response => {\n      const {\n        data\n      } = response.data;\n      if (data) {\n        this.rules.name.push(v => {\n          const index = data.findIndex(item => String(item.name).toLowerCase() == String(v).toLowerCase());\n          if (index > -1) {\n            return this.$t('admin.organization_unit_name_should_be_unique');\n          } else {\n            return true;\n          }\n        });\n      }\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.create({\n        ...this.orgUnit,\n        parentId: this.data?.id,\n        empNumber: this.orgUnit.empNumber?.id\n      }).then(() => {\n        return this.$toast.saveSuccess();\n      }).then(() => {\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      this.orgUnit = {\n        ...orgUnitModel\n      };\n      this.$emit('close', true);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}