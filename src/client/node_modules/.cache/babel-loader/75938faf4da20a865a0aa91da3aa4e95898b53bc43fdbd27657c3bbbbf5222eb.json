{"ast":null,"code":"import { APIService } from '@/core/util/services/api.service';\nimport { OxdDialog } from '@ohrm/oxd';\nimport { required, shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nimport LeaveComment from '@/orangehrmLeavePlugin/components/LeaveComment';\nexport default {\n  name: 'LeaveCommentModal',\n  components: {\n    'oxd-dialog': OxdDialog,\n    'leave-comment': LeaveComment\n  },\n  props: {\n    id: {\n      type: Number,\n      required: false,\n      default: null\n    },\n    leaveRequest: {\n      type: Boolean,\n      default: true\n    }\n  },\n  emits: ['close'],\n  setup(props) {\n    const apiPath = props.leaveRequest ? 'leave-requests' : 'leaves';\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/leave/${apiPath}/${props.id}/leave-comments`);\n    return {\n      http\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      comment: null,\n      rules: {\n        comment: [required, shouldNotExceedCharLength(255)]\n      },\n      comments: []\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.getAll({\n      limit: 0\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      this.comments = data;\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.create({\n        comment: this.comment\n      }).then(() => {\n        this.$toast.saveSuccess();\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      this.comment = null;\n      this.$emit('close', true);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}