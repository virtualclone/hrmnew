{"ast":null,"code":"import { shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nimport { APIService } from '@/core/util/services/api.service';\nimport { OxdDialog } from '@ohrm/oxd';\nimport useLocale from '@/core/util/composable/useLocale';\nimport useDateFormat from '@/core/util/composable/useDateFormat';\nimport { formatDate, parseDate } from '@/core/util/helper/datefns';\nexport default {\n  name: 'TimesheetCommentModal',\n  components: {\n    'oxd-dialog': OxdDialog\n  },\n  props: {\n    data: {\n      type: Object,\n      required: true\n    },\n    editable: {\n      type: Boolean,\n      required: true\n    },\n    timesheetId: {\n      type: Number,\n      required: true\n    }\n  },\n  emits: ['close'],\n  setup() {\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/time/timesheets`);\n    const {\n      locale\n    } = useLocale();\n    const {\n      jsDateFormat\n    } = useDateFormat();\n    return {\n      http,\n      locale,\n      jsDateFormat\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      comment: null,\n      rules: {\n        comment: [shouldNotExceedCharLength(2000)]\n      }\n    };\n  },\n  computed: {\n    projectName() {\n      const {\n        project,\n        customer\n      } = this.data;\n      return project?.label ? project.label : `${customer?.name} - ${project?.name}`;\n    },\n    commentDate() {\n      const {\n        date\n      } = this.data;\n      return date ? formatDate(parseDate(date), this.jsDateFormat, {\n        locale: this.locale\n      }) : null;\n    }\n  },\n  beforeMount() {\n    if (this.data?.id) {\n      this.isLoading = true;\n      this.http.request({\n        method: 'GET',\n        url: `/api/v2/time/timesheets/${this.timesheetId}/entries/${this.data.id}/comment`\n      }).then(response => {\n        const {\n          data\n        } = response.data;\n        this.comment = data?.comment;\n      }).finally(() => {\n        this.isLoading = false;\n      });\n    }\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.request({\n        method: 'PUT',\n        url: `/api/v2/time/timesheets/${this.timesheetId}/entries/comment`,\n        data: {\n          date: this.data.date,\n          comment: this.comment,\n          projectId: this.data.project.id,\n          activityId: this.data.activity.id\n        }\n      }).then(response => {\n        const {\n          data\n        } = response.data;\n        this.$toast.saveSuccess();\n        this.$emit('close', data);\n      });\n    },\n    onCancel() {\n      this.comment = null;\n      this.$emit('close');\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}