{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { computed, ref } from 'vue';\nimport DeleteConfirmationDialog from '@ohrm/components/dialogs/DeleteConfirmationDialog';\nimport { navigate } from '@ohrm/core/util/helper/navigation';\nimport { APIService } from '@/core/util/services/api.service';\nimport usePaginate from '@/core/util/composable/usePaginate';\nimport useSort from '@/core/util/composable/useSort';\nimport JobtitleDropdown from '@/orangehrmPimPlugin/components/JobtitleDropdown.vue';\nimport usei18n from '@/core/util/composable/usei18n';\nconst defaultFilters = {\n  jobTitleId: null\n};\nconst defaultSortOrder = {\n  'kpi.title': 'ASC',\n  'jobTitle.jobTitleName': 'DEFAULT'\n};\nexport default {\n  name: 'KpiSearch',\n  components: {\n    'delete-confirmation': DeleteConfirmationDialog,\n    'jobtitle-dropdown': JobtitleDropdown\n  },\n  setup() {\n    const {\n      $t\n    } = usei18n();\n    const kpiNormalizer = data => {\n      return data.map(item => {\n        return {\n          id: item.id,\n          title: item.title,\n          jobTitleName: item.jobTitle.name,\n          jobTitleId: item.jobTitle.id,\n          minRating: item.minRating,\n          maxRating: item.maxRating,\n          isDefault: item.isDefault ? $t('general.yes') : '',\n          isDeletable: item.deletable\n        };\n      });\n    };\n    const filters = ref({\n      ...defaultFilters\n    });\n    const {\n      sortDefinition,\n      sortField,\n      sortOrder,\n      onSort\n    } = useSort({\n      sortDefinition: defaultSortOrder\n    });\n    const serializedFilters = computed(() => {\n      return {\n        sortField: sortField.value,\n        sortOrder: sortOrder.value,\n        jobTitleId: filters.value.jobTitleId?.id\n      };\n    });\n    const http = new APIService(window.appGlobal.baseUrl, '/api/v2/performance/kpis');\n    const {\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      response,\n      isLoading,\n      execQuery\n    } = usePaginate(http, {\n      query: serializedFilters,\n      normalizer: kpiNormalizer\n    });\n    onSort(execQuery);\n    return {\n      http,\n      showPaginator,\n      currentPage,\n      total,\n      pages,\n      pageSize,\n      items: response,\n      isLoading,\n      execQuery,\n      filters,\n      sortDefinition\n    };\n  },\n  data() {\n    return {\n      headers: [{\n        name: 'title',\n        title: this.$t('performance.key_performance_indicator'),\n        slot: 'title',\n        sortField: 'kpi.title',\n        style: {\n          flex: '30%'\n        }\n      }, {\n        name: 'jobTitleName',\n        title: this.$t('general.job_title'),\n        sortField: 'jobTitle.jobTitleName',\n        style: {\n          flex: '30%'\n        }\n      }, {\n        name: 'minRating',\n        title: this.$t('performance.min_rate'),\n        style: {\n          flex: '10%'\n        }\n      }, {\n        name: 'maxRating',\n        title: this.$t('performance.max_rate'),\n        style: {\n          flex: '10%'\n        }\n      }, {\n        name: 'isDefault',\n        title: this.$t('performance.is_default'),\n        style: {\n          flex: '10%'\n        }\n      }, {\n        name: 'actions',\n        slot: 'action',\n        title: this.$t('general.actions'),\n        style: {\n          flex: '10%'\n        },\n        cellType: 'oxd-table-cell-actions',\n        cellRenderer: this.cellRenderer\n      }],\n      checkedItems: []\n    };\n  },\n  methods: {\n    cellRenderer(...[,,, row]) {\n      const cellConfig = {};\n      cellConfig.edit = {\n        onClick: this.onClickEdit,\n        props: {\n          name: 'pencil-fill'\n        }\n      };\n      if (row.isDeletable) {\n        cellConfig.delete = {\n          onClick: this.onClickDelete,\n          component: 'oxd-icon-button',\n          props: {\n            name: 'trash'\n          }\n        };\n      }\n      return {\n        props: {\n          header: {\n            cellConfig\n          }\n        }\n      };\n    },\n    onClickAdd() {\n      navigate('/performance/saveKpi');\n    },\n    onClickDeleteSelected() {\n      const ids = [];\n      this.checkedItems.forEach(index => {\n        ids.push(this.items?.data[index].id);\n      });\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems(ids);\n        }\n      });\n    },\n    onClickDelete(item) {\n      this.$refs.deleteDialog.showDialog().then(confirmation => {\n        if (confirmation === 'ok') {\n          this.deleteItems([item.id]);\n        }\n      });\n    },\n    deleteItems(items) {\n      if (items instanceof Array) {\n        this.isLoading = true;\n        this.http.deleteAll({\n          ids: items\n        }).then(() => {\n          return this.$toast.deleteSuccess();\n        }).then(() => {\n          this.isLoading = false;\n          this.resetDataTable();\n        });\n      }\n    },\n    onClickEdit(item) {\n      navigate('/performance/saveKpi/{id}', {\n        id: item.id\n      });\n    },\n    async filterItems() {\n      await this.execQuery();\n    },\n    async resetDataTable() {\n      this.checkedItems = [];\n      await this.execQuery();\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}