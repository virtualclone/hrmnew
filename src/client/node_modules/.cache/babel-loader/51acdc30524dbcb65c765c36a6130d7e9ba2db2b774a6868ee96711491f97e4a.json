{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { required, shouldNotExceedCharLength } from '@ohrm/core/util/validation/rules';\nimport { onBeforeMount, reactive, ref, toRefs, watch } from 'vue';\nimport { APIService } from '@/core/util/services/api.service';\nimport { OxdDialog } from '@ohrm/oxd';\nimport ProjectUserAutocomplete from '@/orangehrmTimePlugin/components/ProjectUserAutocomplete.vue';\nexport default {\n  name: 'SaveUserModal',\n  components: {\n    'oxd-dialog': OxdDialog,\n    'projectUser-autocomplete': ProjectUserAutocomplete\n  },\n  props: {\n    projectId: {\n      type: Number,\n      required: true\n    }\n  },\n  emits: ['close'],\n  setup(props) {\n    const filters = ref({\n      userId: null\n    });\n    const http = new APIService(window.appGlobal.baseUrl, `/api/v2/time/project/${props.projectId}/activities`);\n    console.log(props.projectId);\n    return {\n      http,\n      filters\n    };\n  },\n  data() {\n    return {\n      isLoading: false,\n      name: '',\n      rules: {\n        name: [required, shouldNotExceedCharLength(100)]\n      }\n    };\n  },\n  beforeMount() {\n    this.isLoading = true;\n    this.http.getAll({\n      limit: 0\n    }).then(response => {\n      const {\n        data\n      } = response.data;\n      if (data) {\n        this.rules.name.push(v => {\n          const index = data.findIndex(item => String(item.name).toLowerCase() == String(v).toLowerCase());\n          if (index > -1) {\n            return this.$t('general.already_exists');\n          } else {\n            return true;\n          }\n        });\n      }\n    }).finally(() => {\n      this.isLoading = false;\n    });\n  },\n  methods: {\n    onSave() {\n      this.isLoading = true;\n      this.http.create({\n        userId: this.filters.userId,\n        projectId: this\n      }).then(() => {\n        this.$toast.saveSuccess();\n        this.onCancel();\n      });\n    },\n    onCancel() {\n      this.$emit('close', true);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}